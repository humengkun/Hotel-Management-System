{"version":3,"sources":["kendo.dataviz.core.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","isArray","Array","addClass","element","classes","idx","className","classArray","indexOf","removeClass","SPACE_REGEX","alignPathToPixel","path","offset","stroke","drawing","defined","segments","anchor","round","translate","clockwise","angle1","angle2","x","y","isNumber","isNaN","isString","STRING","convertableToNumber","isFinite","isObject","styleValue","isSizeField","field","SIZE_STYLES_REGEX","test","elementStyles","styles","result","field$1","stylesArray","getComputedStyle","parseFloat","getSpacing","defaultSpacing","spacing","top","right","bottom","left","TOP","RIGHT","BOTTOM","LEFT","getTemplate","template","TemplateService","compile","isFunction","content","grep","array","callback","hasClasses","classNames","names","split","inArray","interpolateValue","start","end","progress","COORD_PRECISION","mousewheelDelta","e","delta","wheelDelta","Math","ceil","floor","detail","setDefaultOptions","type","proto","prototype","sparseArrayLimits","arr","min","MAX_VALUE","max","MIN_VALUE","undefined","rotatePoint","cx","cy","angle","theta","rad","Point","cos","sin","numericComparer","a","b","boxDiff","r","s","c","d","g","h","boxes","x1","y1","x2","y2","Box","innerRadialStops","currentStop","stops","usedSpace","innerRadius","radius","currentStops","rectToBox","rect","origin","bottomRight","createAxisTick","tickOptions","tickX","tickY","position","tick","Path","color","vertical","moveTo","lineTo","createAxisGridLine","gridLine","lineStart","lineEnd","line","dashType","absoluteDateDiff","diff","getTime","offsetDiff","getTimezoneOffset","TIME_PER_MINUTE","addTicks","date","ticks","Date","toDate","startOfWeek","weekStartDay","daysToSubtract","day","getDay","TIME_PER_DAY","adjustDST","hours","getHours","setHours","addHours","tzDiff","roundedDate","setMinutes","TIME_PER_HOUR","addDuration","dateValue","unit","YEARS","getFullYear","MONTHS","getMonth","WEEKS","DAYS","getDate","HOURS","MINUTES","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","floorDate","ceilDate","dateComparer","dateDiff","toTime","dateEquals","timeIndex","baseUnit","TIME_PER_UNIT","dateIndex","baseUnitStep","index","startDate","duration","lteDateIndex","sortedDates","currentDate","low","high","parseDate","intlService","parseDates","dates","autoMajorUnit","scale","relativeValue","scaleMultiplier","DEFAULT_PRECISION","abs","pow","log","autoAxisMin","narrow","axisMin","minValue","ZERO_THRESHOLD","autoAxisMax","axisMax","maxValue","step","limitCoordinate","COORDINATE_LIMIT","autoAxisOptions","seriesMin","seriesMax","narrowRange","autoMin","autoMax","majorUnit","autoOptions","roundToMajorUnit","remainderClose","totalAxisOptions","axisOptions","userOptions","userSetMin","userSetMax","userSetLimits","minorUnit","divisor","ratio","remainder","threshold","timeUnits","TIME_PER_YEAR","TIME_PER_MONTH","TIME_PER_WEEK","applyDefaults","baseUnitTime","userMajorUnit","actualUnits","totalUnits","unitsToAdd","head","tail","initRange","axisCrossingValue","throwNegativeValuesError","autoAxisMin$1","base","autoAxisMax$1","logMaxRemainder","Error","angularDistance","numberSign","Group","geometry","Rect","Circle","geometryTransform","Segment","dataviz","__common_getter_js","X","Y","CENTER","WIDTH","HEIGHT","DEFAULT_WIDTH","DEFAULT_HEIGHT","WHITE","BLACK","DEFAULT_FONT","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","OUTSIDE","NONE","CIRCLE","TRIANGLE","CROSS","ARC","INSIDE","VALUE","OBJECT","DATE","FORMAT_REGEX","HIGHLIGHT_ZINDEX","constants","defaultImplementation","IntlService","FORMAT_REPLACE_REGEX","FormatService","ChartService","current$1","DomEventsBuilder","current$2","services","TRIGGER","InstanceObserver","ref","append","bindEvents","deg","elementOffset","elementSize","eventElement","eventCoordinates","last","limitValue","unbindEvents","valueOrDefault","FontLoader","Ring","Sector","DIRECTION_ANGLE","ShapeBuilder","ChartElement","BoxElement","ShapeElement","LINEAR","RADIAL","GRADIENTS","RootElement","FloatElement","DrawingText","Text","ROWS_SPLIT_REGEX","TextBox","Title","AxisLabel","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","Axis","TIME_PER_MILLISECOND","MIN_CATEGORY_POINTS_RANGE","CategoryAxis","DateLabelFormats","AUTO","BASE_UNITS","FIT","DateCategoryAxis","MIN_VALUE_RANGE","NumericAxis","DateValueAxis","DEFAULT_MAJOR_UNIT","LogarithmicAxis","GridLinesMixin","RadarCategoryAxis","PolarAxis","RadarNumericAxisMixin","RadarNumericAxis","RadarLogarithmicAxis","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","CurveProcessor","transform","getter","Number","format","toString","register","userImplementation","Object","defineProperties","implementation","_intlService","auto","formatString","intl","values","len","arguments","match","apply","concat","localeAuto","locale","placeholderFormat","parseInt","substring","fn","chart","context","sender","rtl","notify","name","args","trigger","create","events","observer","handlers","handlerMap","isDefaultPrevented","callObserver","fnName","requiresHandlers","this$1","fetchFonts","fonts","state","depth","MAX_DEPTH","keys","forEach","loadFonts","promises","font","load","logToConsole","Promise","all","then","preloadFonts","clone","equals","point","rotate","center","degrees","cosT","sinT","multiply","distanceTo","dx","dy","sqrt","onCircle","radians","move","wrap","targetBox","wrapPoint","arrayPoint","snapTo","axis","alignTo","targetCenter","shrink","dw","dh","expand","pad","padding","unpad","containsPoint","points","getHash","overlaps","rotation","r1","r2","r3","r4","toRect","hasSize","align","alignment","c1","c2","sizeFunc","startAngle","middle","setRadius","newRadius","radianAngle","ax","ay","adjacentBox","distance","sector","midAndle","midPoint","hw","hh","sa","ca","p","endAngle","vector","startPoint","startVector","endPoint","endVector","dist","getBBox","angles","allAngles","startAngleIndex","endAngleIndex","slice","call","createRing","arc","innerEnd","Arc","radiusX","radiusY","fromArc","close","pointAt","children","reflow","currentChild","destroy","animation","getRoot","parent","getSender","service","getService","chartService","translateChildren","childrenCount","item","arguments$1","renderVisual","visible","createVisual","addVisual","renderChildren","createAnimation","renderComplete","visual","chartElement","appendVisual","zIndex","Animation","childVisual","noclip","clipRoot","stackRoot","stackVisual","isStackRoot","pos","sibling","here","visuals","insert","traverse","child","closest","matched","hasHighlight","highlight","createHighlight","toggleHighlight","show","highlightOptions","customVisual","_highlight","fill","opacity","highlightVisualArgs","series","dataItem","category","percentage","runningTotal","total","createGradientOverlay","gradientOptions","overlay","createGradient","closed","elements","margin","shrinkToFit","hasSetSize","borderWidth","border","reflowPaddingBox","vAlign","paddingBox","contentBox","hasBox","background","fromRect","visualStyle","cursor","pointData","getElement","halfWidth","fromPoints","MultiPath","visualOptions","glass","sharpBevel","roundedBevel","roundedGlass","supportVML","sharpGlass","bubbleShadow","rootOptions","gradients","currentBox","createBackground","drawingGradient","hashCode","gradient","LinearGradient","RadialGradient","_initDirection","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","elementSpacing","vSpacing","reflowChildren","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","elementSize$$1","groupElementStart","elementBox","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","groupsStart","alignStart","groupSize","maxSize","groupElementsSize","topLeft","_initContainer","_autoReflow","rowIdx","rows","floatElement","textOptions","container","trim","visualBox","visualFn","_boxReflow","visualContext","clippedBBox","normalBox","rotatedBox","rotationTransform","getDefaultVisual","boxCenter","buildTitle","defaultOptions","title","titleOptions","culture","click","widget","alignRotation","bbox","matrix","rotationMatrix","rotationOrigin","alignAxis","distanceAxis","axisAnchor","topRight","bottomLeft","distanceLeft","distanceRight","alignEnd","alignCenter","transformCopy","fields","render","hide","label","icon","noteTemplate","wrapperBox","linePoints","createLine","defaultVisual","eventArgs","preventDefault","hover","leave","_unsetActivePoint","labels","majorTickSize","minorTickSize","minorTicks","minorTickType","majorTicks","majorTickType","_deferLabels","createLabels","createTitle","createNotes","labelsRange","skip","labelsCount","range","labelOptions","autoRotateLabels","createAxisLabel","lineBox","mirror","axisX","axisY","lineWidth","visualSize","note","notes","items","data","parseNoteValue","reverse","createPlotBands","gridLinesVisual","gridLines","_gridLines","createTicks","lineGroup","tickPositions","skipUnit","count","tickLineOptions","getMajorTickPositions","getMinorTickPositions","_alignLines","_lineGroup","getActualTickSize","tickSize","_backgroundPath","altAxis","slotX","slotY","bandRect","plotBands","plotArea","_plotbandGroup","pane","axes","getSlot","from","to","createGridLines","axisLineVisible","linePos","lineOptions","minorGridLines","majorGridLines","labelSize","sizeFn","titleSize","space","rootBox","boxSize","maxLabelSize","arrangeTitle","arrangeLabels","arrangeNotes","getLabelsTickPositions","labelTickIndex","tickIx","labelPos","labelBox","firstTickPosition","nextTickPosition","labelX","labelY","labelsBetweenTicks","justified","labelOffset","idx$1","slot","shouldRenderNote","noteSlot","secondAxis","axisLabelText","tmpl","limit","lastLabel","limitRange","rangeSize","valueRange","years","months","weeks","days","minutes","seconds","milliseconds","_ticks","_initCategories","categories","definedMin","definedMax","srcCategories","rangeIndices","totalRange","totalRangeIndices","_seriesMax","getScale","getTickPositions","stepSize","positions","unshift","hideOutOfRangeLabels","valueAxis","firstLabel","getTicks","cache","_hash","p1","p2","slotBox","singleSlot","limitSlot","limittedSlot","categoryIndex","pointCategoryIndex","startValue","getCategory","translateRange","zoomRange","rate","totalMin","totalMax","scaleRange","dataItems","hideOutOfRangeNotes","pan","pointsRange","diffStart","diffEnd","rangeMin","rangeMax","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","toLowerCase","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","rounds","lastCategory","categoryIx","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","round$$1","datesRange","totalLimits","panRange","indicesRange","autoBaseUnitSteps","maxDateGroups","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","stepIndex","rangeOptions","autoUnit","stepOptions","unitSteps","nextStep","span","autoUnitIx","units","shift","nextDate","maxCategory","upper","roundToNext","roundedStep","unitFormat","dateFormats","totalOptions","totalMajorUnit","getDivisions","stepValue","lineSize","divisions","dir","startEdge","skipStep","getValue","valueOffset","endValue","isValidRange","newRange","axisCrossingValues","timeRange","exact","limittedRange","logMin","logMax","floorMax","traverseMajorTicksPositions","tickPosition","traverseMinorTicksPositions","power","_lineOptions","minorOptions","ref$2","_minorIntervalOptions","minorStep","acceptOptionsRange","acceptNewRange","nextValue","difference","majorAngles","minorAngles","skipMajor","majorGridLineAngles","renderMajorGridLines","minorGridLineAngles","renderMinorGridLines","renderGridLines","radiusCallback","circle","gridLineAngles","skipAngles","divs","intervals","altAxisVisible","alpha","intervalAngle","reflowLabels","skipOption","stepOption","divCount","divAngle","majorIntervals","minorIntervals","interval","minorAngle","minorRadius","band","ring","plotBandSlot","slotStart","toValue","slots","totalDivs","slotAngle","fromValue","instanceOptions","tmp","atan2","PI","bandStyle","shape","polarAxis","plotBandPoints","innerPoints","outerPoints","innerCircle","outerCircle","radarMajorGridLinePositions","radarMinorGridLinePositions","tickRadius","angleIx","midAngle","gamma","beta","axisType","minorSkipStep","process","dataPoints","p0","tangent","initialControlPoint","lastControlPoint","controlPoints","tangent$1","cp0","controlPoints$1","cp1","controlPoints$2","tangent$2","removeDuplicates","pop","controlOut","firstControlPoint","secondControlPoint","splice","invertAxis","lineFunction","calculateFunction","isLine","monotonic","sign","oldXField","xField","yField","restrict","switchOrientation","isMonotonicByField","restrictControlPoint","cp","p3","t1","t2","xValue","yValue","controlPoint","Gradients","draw","ExportMixin","skipLegacy","exportVisual","exportSVG","exportImage","exportPDF","svg","imageDataURL","Surface","exportGroup","surface","image","support","canvas","css","display","appendTo","_rootElement","toDataURL","remove","Point2D","Box2D","mwDelta","originalEvent"],"mappings":"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","file":"kendo.dataviz.core.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/kendo-core', [\n        'kendo.core',\n        'kendo.drawing'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var drawing = kendo.drawing;\n        var util = drawing.util;\n        var Path = drawing.Path;\n        var Group = drawing.Group;\n        var Class = kendo.Class;\n        var geometry = kendo.geometry;\n        var Rect = geometry.Rect;\n        var Circle = geometry.Circle;\n        var geometryTransform = geometry.transform;\n        var Segment = geometry.Segment;\n        var dataviz = kendo.dataviz;\n        var deepExtend = kendo.deepExtend;\n        var isFunction = kendo.isFunction;\n        var __common_getter_js = kendo.getter;\n        var X = 'x';\n        var Y = 'y';\n        var TOP = 'top';\n        var BOTTOM = 'bottom';\n        var LEFT = 'left';\n        var RIGHT = 'right';\n        var CENTER = 'center';\n        var WIDTH = 'width';\n        var HEIGHT = 'height';\n        var COORD_PRECISION = 3;\n        var MAX_VALUE = Number.MAX_VALUE;\n        var MIN_VALUE = -Number.MAX_VALUE;\n        var DEFAULT_WIDTH = 600;\n        var DEFAULT_HEIGHT = 400;\n        var WHITE = '#fff';\n        var BLACK = '#000';\n        var DEFAULT_FONT = '12px sans-serif';\n        var DEFAULT_PRECISION = 10;\n        var AXIS_LABEL_CLICK = 'axisLabelClick';\n        var NOTE_CLICK = 'noteClick';\n        var NOTE_HOVER = 'noteHover';\n        var OUTSIDE = 'outside';\n        var NONE = 'none';\n        var CIRCLE = 'circle';\n        var TRIANGLE = 'triangle';\n        var CROSS = 'cross';\n        var ARC = 'arc';\n        var INSIDE = 'inside';\n        var VALUE = 'value';\n        var STRING = 'string';\n        var OBJECT = 'object';\n        var DATE = 'date';\n        var FORMAT_REGEX = /\\{\\d+:?/;\n        var HIGHLIGHT_ZINDEX = 100;\n        var constants = {\n            X: X,\n            Y: Y,\n            WIDTH: WIDTH,\n            HEIGHT: HEIGHT,\n            DEFAULT_HEIGHT: DEFAULT_HEIGHT,\n            DEFAULT_WIDTH: DEFAULT_WIDTH,\n            TOP: TOP,\n            LEFT: LEFT,\n            BOTTOM: BOTTOM,\n            RIGHT: RIGHT,\n            CENTER: CENTER,\n            COORD_PRECISION: COORD_PRECISION,\n            DEFAULT_PRECISION: DEFAULT_PRECISION,\n            CIRCLE: CIRCLE,\n            TRIANGLE: TRIANGLE,\n            CROSS: CROSS,\n            MAX_VALUE: MAX_VALUE,\n            MIN_VALUE: MIN_VALUE,\n            WHITE: WHITE,\n            BLACK: BLACK,\n            DEFAULT_FONT: DEFAULT_FONT,\n            AXIS_LABEL_CLICK: AXIS_LABEL_CLICK,\n            OUTSIDE: OUTSIDE,\n            INSIDE: INSIDE,\n            NONE: NONE,\n            NOTE_CLICK: NOTE_CLICK,\n            NOTE_HOVER: NOTE_HOVER,\n            VALUE: VALUE,\n            STRING: STRING,\n            OBJECT: OBJECT,\n            DATE: DATE,\n            ARC: ARC,\n            FORMAT_REGEX: FORMAT_REGEX,\n            HIGHLIGHT_ZINDEX: HIGHLIGHT_ZINDEX\n        };\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        function addClass(element, classes) {\n            var classArray = isArray(classes) ? classes : [classes];\n            for (var idx = 0; idx < classArray.length; idx++) {\n                var className = classArray[idx];\n                if (element.className.indexOf(className) === -1) {\n                    element.className += ' ' + className;\n                }\n            }\n        }\n        var SPACE_REGEX = /\\s+/g;\n        function removeClass(element, className) {\n            if (element && element.className) {\n                element.className = element.className.replace(className, '').replace(SPACE_REGEX, ' ');\n            }\n        }\n        function alignPathToPixel(path) {\n            var offset = 0.5;\n            if (path.options.stroke && kendo.drawing.util.defined(path.options.stroke.width)) {\n                if (path.options.stroke.width % 2 === 0) {\n                    offset = 0;\n                }\n            }\n            for (var i = 0; i < path.segments.length; i++) {\n                path.segments[i].anchor().round(0).translate(offset, offset);\n            }\n            return path;\n        }\n        function clockwise(angle1, angle2) {\n            return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        function isString(value) {\n            return typeof value === STRING;\n        }\n        function convertableToNumber(value) {\n            return isNumber(value) || isString(value) && isFinite(value);\n        }\n        function isObject(value) {\n            return typeof value === 'object';\n        }\n        function styleValue(value) {\n            if (isNumber(value)) {\n                return value + 'px';\n            }\n            return value;\n        }\n        var SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n        function isSizeField(field) {\n            return SIZE_STYLES_REGEX.test(field);\n        }\n        function elementStyles(element, styles) {\n            var stylesArray = isString(styles) ? [styles] : styles;\n            if (isArray(stylesArray)) {\n                var result = {};\n                var style = window.getComputedStyle(element);\n                for (var idx = 0; idx < stylesArray.length; idx++) {\n                    var field = stylesArray[idx];\n                    result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n                }\n                return result;\n            } else if (isObject(styles)) {\n                for (var field$1 in styles) {\n                    element.style[field$1] = styleValue(styles[field$1]);\n                }\n            }\n        }\n        function getSpacing(value, defaultSpacing) {\n            if (defaultSpacing === void 0) {\n                defaultSpacing = 0;\n            }\n            var spacing = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            };\n            if (typeof value === 'number') {\n                spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n            } else {\n                spacing[TOP] = value[TOP] || defaultSpacing;\n                spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n                spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n                spacing[LEFT] = value[LEFT] || defaultSpacing;\n            }\n            return spacing;\n        }\n        var defaultImplementation = {\n            format: function (format, value) {\n                return value;\n            },\n            toString: function (value) {\n                return value;\n            },\n            parseDate: function (value) {\n                return new Date(value);\n            }\n        };\n        var current = defaultImplementation;\n        var IntlService = Class.extend({});\n        IntlService.register = function (userImplementation) {\n            current = userImplementation;\n        };\n        if (Object.defineProperties) {\n            Object.defineProperties(IntlService, {\n                implementation: {\n                    get: function () {\n                        return current;\n                    }\n                }\n            });\n        }\n        var FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n        var FormatService = Class.extend({\n            init: function (intlService) {\n                this._intlService = intlService;\n            },\n            auto: function (formatString) {\n                var values = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    values[len] = arguments[len + 1];\n                var intl = this.intlService;\n                if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n                    return intl.format.apply(intl, [formatString].concat(values));\n                }\n                return intl.toString(values[0], formatString);\n            },\n            localeAuto: function (formatString, values, locale) {\n                var intl = this.intlService;\n                var result;\n                if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n                    result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n                        var value = values[parseInt(index, 10)];\n                        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : '', locale);\n                    });\n                } else {\n                    result = intl.toString(values[0], formatString, locale);\n                }\n                return result;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(FormatService.fn, {\n                intlService: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var ChartService = Class.extend({\n            init: function (chart, context) {\n                if (context === void 0) {\n                    context = {};\n                }\n                this._intlService = context.intlService;\n                this.sender = context.sender || chart;\n                this.format = new FormatService(context.intlService);\n                this.chart = chart;\n                this.rtl = context.rtl;\n            },\n            notify: function (name, args) {\n                this.chart.trigger(name, args);\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(ChartService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var current$1;\n        var DomEventsBuilder = Class.extend({});\n        DomEventsBuilder.register = function (userImplementation) {\n            current$1 = userImplementation;\n        };\n        DomEventsBuilder.create = function (element, events) {\n            if (current$1) {\n                return current$1.create(element, events);\n            }\n        };\n        var current$2 = {\n            compile: function (template) {\n                return template;\n            }\n        };\n        var TemplateService = Class.extend({});\n        TemplateService.register = function (userImplementation) {\n            current$2 = userImplementation;\n        };\n        TemplateService.compile = function (template) {\n            return current$2.compile(template);\n        };\n        var services = {\n            ChartService: ChartService,\n            DomEventsBuilder: DomEventsBuilder,\n            FormatService: FormatService,\n            IntlService: IntlService,\n            TemplateService: TemplateService\n        };\n        function getTemplate(options) {\n            if (options === void 0) {\n                options = {};\n            }\n            var template;\n            if (options.template) {\n                options.template = template = TemplateService.compile(options.template);\n            } else if (isFunction(options.content)) {\n                template = options.content;\n            }\n            return template;\n        }\n        function grep(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                if (callback(array[idx])) {\n                    result.push(array[idx]);\n                }\n            }\n            return result;\n        }\n        function hasClasses(element, classNames) {\n            if (element.className) {\n                var names = classNames.split(' ');\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (element.className.indexOf(names[idx]) !== -1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        function inArray(value, array) {\n            if (array) {\n                return array.indexOf(value) !== -1;\n            }\n        }\n        function interpolateValue(start, end, progress) {\n            return kendo.drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n        }\n        var TRIGGER = 'trigger';\n        var InstanceObserver = Class.extend({\n            init: function (observer, handlers) {\n                this.observer = observer;\n                this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n            },\n            trigger: function (name, args) {\n                var ref = this;\n                var observer = ref.observer;\n                var handlerMap = ref.handlerMap;\n                var isDefaultPrevented;\n                if (handlerMap[name]) {\n                    isDefaultPrevented = this.callObserver(handlerMap[name], args);\n                } else if (observer[TRIGGER]) {\n                    isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n                }\n                return isDefaultPrevented;\n            },\n            callObserver: function (fnName) {\n                var args = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    args[len] = arguments[len + 1];\n                return this.observer[fnName].apply(this.observer, args);\n            },\n            requiresHandlers: function (names) {\n                var this$1 = this;\n                if (this.observer.requiresHandlers) {\n                    return this.observer.requiresHandlers(names);\n                }\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (this$1.handlerMap[names[idx]]) {\n                        return true;\n                    }\n                }\n            }\n        });\n        function map(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                var value = callback(array[idx]);\n                if (kendo.drawing.util.defined(value)) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        function mousewheelDelta(e) {\n            var delta = 0;\n            if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n                delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n            }\n            if (e.detail) {\n                delta = kendo.drawing.util.round(e.detail / 3);\n            }\n            return delta;\n        }\n        var ref = kendo.drawing.util;\n        var append = ref.append;\n        var bindEvents = ref.bindEvents;\n        var defined = ref.defined;\n        var deg = ref.deg;\n        var elementOffset = ref.elementOffset;\n        var elementSize = ref.elementSize;\n        var eventElement = ref.eventElement;\n        var eventCoordinates = ref.eventCoordinates;\n        var last = ref.last;\n        var limitValue = ref.limitValue;\n        var objectKey = ref.objectKey;\n        var rad = ref.rad;\n        var round = ref.round;\n        var unbindEvents = ref.unbindEvents;\n        var valueOrDefault = ref.valueOrDefault;\n        var FontLoader = Class.extend({});\n        FontLoader.fetchFonts = function (options, fonts, state) {\n            if (state === void 0) {\n                state = { depth: 0 };\n            }\n            var MAX_DEPTH = 5;\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    FontLoader.fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        };\n        FontLoader.loadFonts = function (fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        };\n        FontLoader.preloadFonts = function (options, callback) {\n            var fonts = [];\n            FontLoader.fetchFonts(options, fonts);\n            FontLoader.loadFonts(fonts, callback);\n        };\n        function setDefaultOptions(type, options) {\n            var proto = type.prototype;\n            if (proto.options) {\n                proto.options = deepExtend({}, proto.options, options);\n            } else {\n                proto.options = options;\n            }\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_VALUE;\n            var max = MIN_VALUE;\n            for (var idx = 0, length = arr.length; idx < length; idx++) {\n                var value = arr[idx];\n                if (value !== null && isFinite(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n            return {\n                min: min === MAX_VALUE ? undefined : min,\n                max: max === MIN_VALUE ? undefined : max\n            };\n        }\n        var Point = Class.extend({\n            init: function (x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n            },\n            clone: function () {\n                return new Point(this.x, this.y);\n            },\n            equals: function (point) {\n                return point && this.x === point.x && this.y === point.y;\n            },\n            rotate: function (center, degrees) {\n                var theta = rad(degrees);\n                var cosT = Math.cos(theta);\n                var sinT = Math.sin(theta);\n                var cx = center.x;\n                var cy = center.y;\n                var ref = this;\n                var x = ref.x;\n                var y = ref.y;\n                this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n                this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n                return this;\n            },\n            multiply: function (a) {\n                this.x *= a;\n                this.y *= a;\n                return this;\n            },\n            distanceTo: function (point) {\n                var dx = this.x - point.x;\n                var dy = this.y - point.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            }\n        });\n        Point.onCircle = function (center, angle, radius) {\n            var radians = rad(angle);\n            return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n        };\n        var Box = Class.extend({\n            init: function (x1, y1, x2, y2) {\n                this.x1 = x1 || 0;\n                this.y1 = y1 || 0;\n                this.x2 = x2 || 0;\n                this.y2 = y2 || 0;\n            },\n            equals: function (box) {\n                return this.x1 === box.x1 && this.x2 === box.x2 && this.y1 === box.y1 && this.y2 === box.y2;\n            },\n            width: function () {\n                return this.x2 - this.x1;\n            },\n            height: function () {\n                return this.y2 - this.y1;\n            },\n            translate: function (dx, dy) {\n                this.x1 += dx;\n                this.x2 += dx;\n                this.y1 += dy;\n                this.y2 += dy;\n                return this;\n            },\n            move: function (x, y) {\n                var height = this.height();\n                var width = this.width();\n                if (defined(x)) {\n                    this.x1 = x;\n                    this.x2 = this.x1 + width;\n                }\n                if (defined(y)) {\n                    this.y1 = y;\n                    this.y2 = this.y1 + height;\n                }\n                return this;\n            },\n            wrap: function (targetBox) {\n                this.x1 = Math.min(this.x1, targetBox.x1);\n                this.y1 = Math.min(this.y1, targetBox.y1);\n                this.x2 = Math.max(this.x2, targetBox.x2);\n                this.y2 = Math.max(this.y2, targetBox.y2);\n                return this;\n            },\n            wrapPoint: function (point) {\n                var arrayPoint = isArray(point);\n                var x = arrayPoint ? point[0] : point.x;\n                var y = arrayPoint ? point[1] : point.y;\n                this.wrap(new Box(x, y, x, y));\n                return this;\n            },\n            snapTo: function (targetBox, axis) {\n                if (axis === X || !axis) {\n                    this.x1 = targetBox.x1;\n                    this.x2 = targetBox.x2;\n                }\n                if (axis === Y || !axis) {\n                    this.y1 = targetBox.y1;\n                    this.y2 = targetBox.y2;\n                }\n                return this;\n            },\n            alignTo: function (targetBox, anchor) {\n                var height = this.height();\n                var width = this.width();\n                var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n                var offset = axis === Y ? height : width;\n                if (anchor === CENTER) {\n                    var targetCenter = targetBox.center();\n                    var center = this.center();\n                    this.x1 += targetCenter.x - center.x;\n                    this.y1 += targetCenter.y - center.y;\n                } else if (anchor === TOP || anchor === LEFT) {\n                    this[axis + 1] = targetBox[axis + 1] - offset;\n                } else {\n                    this[axis + 1] = targetBox[axis + 2];\n                }\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            shrink: function (dw, dh) {\n                this.x2 -= dw;\n                this.y2 -= dh;\n                return this;\n            },\n            expand: function (dw, dh) {\n                this.shrink(-dw, -dh);\n                return this;\n            },\n            pad: function (padding) {\n                var spacing = getSpacing(padding);\n                this.x1 -= spacing.left;\n                this.x2 += spacing.right;\n                this.y1 -= spacing.top;\n                this.y2 += spacing.bottom;\n                return this;\n            },\n            unpad: function (padding) {\n                var spacing = getSpacing(padding);\n                spacing.left = -spacing.left;\n                spacing.top = -spacing.top;\n                spacing.right = -spacing.right;\n                spacing.bottom = -spacing.bottom;\n                return this.pad(spacing);\n            },\n            clone: function () {\n                return new Box(this.x1, this.y1, this.x2, this.y2);\n            },\n            center: function () {\n                return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n            },\n            containsPoint: function (point) {\n                return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n            },\n            points: function () {\n                return [\n                    new Point(this.x1, this.y1),\n                    new Point(this.x2, this.y1),\n                    new Point(this.x2, this.y2),\n                    new Point(this.x1, this.y2)\n                ];\n            },\n            getHash: function () {\n                return [\n                    this.x1,\n                    this.y1,\n                    this.x2,\n                    this.y2\n                ].join(',');\n            },\n            overlaps: function (box) {\n                return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n            },\n            rotate: function (rotation) {\n                var width = this.width();\n                var height = this.height();\n                var ref = this.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var r1 = rotatePoint(0, 0, cx, cy, rotation);\n                var r2 = rotatePoint(width, 0, cx, cy, rotation);\n                var r3 = rotatePoint(width, height, cx, cy, rotation);\n                var r4 = rotatePoint(0, height, cx, cy, rotation);\n                width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n                height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            toRect: function () {\n                return new Rect([\n                    this.x1,\n                    this.y1\n                ], [\n                    this.width(),\n                    this.height()\n                ]);\n            },\n            hasSize: function () {\n                return this.width() !== 0 && this.height() !== 0;\n            },\n            align: function (targetBox, axis, alignment) {\n                var c1 = axis + 1;\n                var c2 = axis + 2;\n                var sizeFunc = axis === X ? WIDTH : HEIGHT;\n                var size = this[sizeFunc]();\n                if (inArray(alignment, [\n                        LEFT,\n                        TOP\n                    ])) {\n                    this[c1] = targetBox[c1];\n                    this[c2] = this[c1] + size;\n                } else if (inArray(alignment, [\n                        RIGHT,\n                        BOTTOM\n                    ])) {\n                    this[c2] = targetBox[c2];\n                    this[c1] = this[c2] - size;\n                } else if (alignment === CENTER) {\n                    this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n                    this[c2] = this[c1] + size;\n                }\n            }\n        });\n        function rotatePoint(x, y, cx, cy, angle) {\n            var theta = rad(angle);\n            return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n        }\n        var Ring = Class.extend({\n            init: function (center, innerRadius, radius, startAngle, angle) {\n                this.center = center;\n                this.innerRadius = innerRadius;\n                this.radius = radius;\n                this.startAngle = startAngle;\n                this.angle = angle;\n            },\n            clone: function () {\n                return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n            },\n            middle: function () {\n                return this.startAngle + this.angle / 2;\n            },\n            setRadius: function (newRadius, innerRadius) {\n                if (innerRadius) {\n                    this.innerRadius = newRadius;\n                } else {\n                    this.radius = newRadius;\n                }\n                return this;\n            },\n            point: function (angle, innerRadius) {\n                var radianAngle = rad(angle);\n                var ax = Math.cos(radianAngle);\n                var ay = Math.sin(radianAngle);\n                var radius = innerRadius ? this.innerRadius : this.radius;\n                var x = round(this.center.x - ax * radius, COORD_PRECISION);\n                var y = round(this.center.y - ay * radius, COORD_PRECISION);\n                return new Point(x, y);\n            },\n            adjacentBox: function (distance, width, height) {\n                var sector = this.clone().expand(distance);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                var hw = width / 2;\n                var hh = height / 2;\n                var sa = Math.sin(rad(midAndle));\n                var ca = Math.cos(rad(midAndle));\n                var x = midPoint.x - hw;\n                var y = midPoint.y - hh;\n                if (Math.abs(sa) < 0.9) {\n                    x += hw * -ca / Math.abs(ca);\n                }\n                if (Math.abs(ca) < 0.9) {\n                    y += hh * -sa / Math.abs(sa);\n                }\n                return new Box(x, y, x + width, y + height);\n            },\n            containsPoint: function (p) {\n                var center = this.center;\n                var innerRadius = this.innerRadius;\n                var radius = this.radius;\n                var startAngle = this.startAngle;\n                var endAngle = this.startAngle + this.angle;\n                var dx = p.x - center.x;\n                var dy = p.y - center.y;\n                var vector = new Point(dx, dy);\n                var startPoint = this.point(startAngle);\n                var startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n                var endPoint = this.point(endAngle);\n                var endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n                var dist = round(dx * dx + dy * dy, COORD_PRECISION);\n                return (startVector.equals(vector) || clockwise(startVector, vector)) && !clockwise(endVector, vector) && dist >= innerRadius * innerRadius && dist <= radius * radius;\n            },\n            getBBox: function () {\n                var this$1 = this;\n                var box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n                var startAngle = round(this.startAngle % 360);\n                var endAngle = round((startAngle + this.angle) % 360);\n                var innerRadius = this.innerRadius;\n                var allAngles = [\n                    0,\n                    90,\n                    180,\n                    270,\n                    startAngle,\n                    endAngle\n                ].sort(numericComparer);\n                var startAngleIndex = allAngles.indexOf(startAngle);\n                var endAngleIndex = allAngles.indexOf(endAngle);\n                var angles;\n                if (startAngle === endAngle) {\n                    angles = allAngles;\n                } else {\n                    if (startAngleIndex < endAngleIndex) {\n                        angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n                    } else {\n                        angles = [].concat(allAngles.slice(0, endAngleIndex + 1), allAngles.slice(startAngleIndex, allAngles.length));\n                    }\n                }\n                for (var i = 0; i < angles.length; i++) {\n                    var point = this$1.point(angles[i]);\n                    box.wrapPoint(point);\n                    box.wrapPoint(point, innerRadius);\n                }\n                if (!innerRadius) {\n                    box.wrapPoint(this.center);\n                }\n                return box;\n            },\n            expand: function (value) {\n                this.radius += value;\n                return this;\n            }\n        });\n        function numericComparer(a, b) {\n            return a - b;\n        }\n        var Sector = Ring.extend({\n            init: function (center, radius, startAngle, angle) {\n                Ring.fn.init.call(this, center, 0, radius, startAngle, angle);\n            },\n            expand: function (value) {\n                return Ring.fn.expand.call(this, value);\n            },\n            clone: function () {\n                return new Sector(this.center, this.radius, this.startAngle, this.angle);\n            },\n            setRadius: function (newRadius) {\n                this.radius = newRadius;\n                return this;\n            }\n        });\n        var DIRECTION_ANGLE = 0.001;\n        var ShapeBuilder = Class.extend({\n            createRing: function (sector, options) {\n                var startAngle = sector.startAngle + 180;\n                var endAngle = sector.angle + startAngle;\n                if (sector.angle > 0 && startAngle === endAngle) {\n                    endAngle += DIRECTION_ANGLE;\n                }\n                var center = new geometry.Point(sector.center.x, sector.center.y);\n                var radius = Math.max(sector.radius, 0);\n                var innerRadius = Math.max(sector.innerRadius, 0);\n                var arc = new geometry.Arc(center, {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: radius,\n                    radiusY: radius\n                });\n                var path = Path.fromArc(arc, options).close();\n                if (innerRadius) {\n                    arc.radiusX = arc.radiusY = innerRadius;\n                    var innerEnd = arc.pointAt(endAngle);\n                    path.lineTo(innerEnd.x, innerEnd.y);\n                    path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n                } else {\n                    path.lineTo(center.x, center.y);\n                }\n                return path;\n            }\n        });\n        ShapeBuilder.current = new ShapeBuilder();\n        var ChartElement = Class.extend({\n            init: function (options) {\n                this.children = [];\n                this.options = deepExtend({}, this.options, options);\n            },\n            reflow: function (targetBox) {\n                var children = this.children;\n                var box;\n                for (var i = 0; i < children.length; i++) {\n                    var currentChild = children[i];\n                    currentChild.reflow(targetBox);\n                    box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n                }\n                this.box = box || targetBox;\n            },\n            destroy: function () {\n                var children = this.children;\n                if (this.animation) {\n                    this.animation.destroy();\n                }\n                for (var i = 0; i < children.length; i++) {\n                    children[i].destroy();\n                }\n            },\n            getRoot: function () {\n                var parent = this.parent;\n                return parent ? parent.getRoot() : null;\n            },\n            getSender: function () {\n                var service = this.getService();\n                if (service) {\n                    return service.sender;\n                }\n            },\n            getService: function () {\n                var element = this;\n                while (element) {\n                    if (element.chartService) {\n                        return element.chartService;\n                    }\n                    element = element.parent;\n                }\n            },\n            translateChildren: function (dx, dy) {\n                var children = this.children;\n                var childrenCount = children.length;\n                for (var i = 0; i < childrenCount; i++) {\n                    children[i].box.translate(dx, dy);\n                }\n            },\n            append: function () {\n                var arguments$1 = arguments;\n                var this$1 = this;\n                for (var i = 0; i < arguments.length; i++) {\n                    var item = arguments$1[i];\n                    this$1.children.push(item);\n                    item.parent = this$1;\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visible === false) {\n                    return;\n                }\n                this.createVisual();\n                this.addVisual();\n                this.renderChildren();\n                this.createAnimation();\n                this.renderComplete();\n            },\n            addVisual: function () {\n                if (this.visual) {\n                    this.visual.chartElement = this;\n                    if (this.parent) {\n                        this.parent.appendVisual(this.visual);\n                    }\n                }\n            },\n            renderChildren: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    children[i].renderVisual();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group({\n                    zIndex: this.options.zIndex,\n                    visible: valueOrDefault(this.options.visible, true)\n                });\n            },\n            createAnimation: function () {\n                if (this.visual) {\n                    this.animation = drawing.Animation.create(this.visual, this.options.animation);\n                }\n            },\n            appendVisual: function (childVisual) {\n                if (!childVisual.chartElement) {\n                    childVisual.chartElement = this;\n                }\n                if (childVisual.options.noclip) {\n                    this.clipRoot().visual.append(childVisual);\n                } else if (defined(childVisual.options.zIndex)) {\n                    this.stackRoot().stackVisual(childVisual);\n                } else if (this.isStackRoot) {\n                    this.stackVisual(childVisual);\n                } else if (this.visual) {\n                    this.visual.append(childVisual);\n                } else {\n                    this.parent.appendVisual(childVisual);\n                }\n            },\n            clipRoot: function () {\n                if (this.parent) {\n                    return this.parent.clipRoot();\n                }\n                return this;\n            },\n            stackRoot: function () {\n                if (this.parent) {\n                    return this.parent.stackRoot();\n                }\n                return this;\n            },\n            stackVisual: function (childVisual) {\n                var zIndex = childVisual.options.zIndex || 0;\n                var visuals = this.visual.children;\n                var length = visuals.length;\n                var pos;\n                for (pos = 0; pos < length; pos++) {\n                    var sibling = visuals[pos];\n                    var here = valueOrDefault(sibling.options.zIndex, 0);\n                    if (here > zIndex) {\n                        break;\n                    }\n                }\n                this.visual.insert(pos, childVisual);\n            },\n            traverse: function (callback) {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    var child = children[i];\n                    callback(child);\n                    if (child.traverse) {\n                        child.traverse(callback);\n                    }\n                }\n            },\n            closest: function (match) {\n                var element = this;\n                var matched = false;\n                while (element && !matched) {\n                    matched = match(element);\n                    if (!matched) {\n                        element = element.parent;\n                    }\n                }\n                if (matched) {\n                    return element;\n                }\n            },\n            renderComplete: function () {\n            },\n            hasHighlight: function () {\n                var options = (this.options || {}).highlight;\n                return !(!this.createHighlight || options && options.visible === false);\n            },\n            toggleHighlight: function (show) {\n                var this$1 = this;\n                var options = (this.options || {}).highlight || {};\n                var customVisual = options.visual;\n                var highlight = this._highlight;\n                if (!highlight) {\n                    var highlightOptions = {\n                        fill: {\n                            color: WHITE,\n                            opacity: 0.2\n                        },\n                        stroke: {\n                            color: WHITE,\n                            width: 1,\n                            opacity: 0.2\n                        }\n                    };\n                    if (customVisual) {\n                        highlight = this._highlight = customVisual($.extend(this.highlightVisualArgs(), {\n                            createVisual: function () {\n                                return this$1.createHighlight(highlightOptions);\n                            },\n                            sender: this.getSender(),\n                            series: this.series,\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total\n                        }));\n                        if (!highlight) {\n                            return;\n                        }\n                    } else {\n                        highlight = this._highlight = this.createHighlight(highlightOptions);\n                    }\n                    if (!defined(highlight.options.zIndex)) {\n                        highlight.options.zIndex = valueOrDefault(options.zIndex, this.options.zIndex);\n                    }\n                    this.appendVisual(highlight);\n                }\n                highlight.visible(show);\n            },\n            createGradientOverlay: function (element, options, gradientOptions) {\n                var overlay = new Path($.extend({\n                    stroke: { color: 'none' },\n                    fill: this.createGradient(gradientOptions),\n                    closed: element.options.closed\n                }, options));\n                overlay.segments.elements(element.segments.elements());\n                return overlay;\n            },\n            createGradient: function (options) {\n                if (this.parent) {\n                    return this.parent.createGradient(options);\n                }\n            }\n        });\n        ChartElement.prototype.options = {};\n        var BoxElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.options.margin = getSpacing(this.options.margin);\n                this.options.padding = getSpacing(this.options.padding);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var shrinkToFit = options.shrinkToFit;\n                var hasSetSize = width && height;\n                var margin = options.margin;\n                var padding = options.padding;\n                var borderWidth = options.border.width;\n                var box;\n                var reflowPaddingBox = function () {\n                    this$1.align(targetBox, X, options.align);\n                    this$1.align(targetBox, Y, options.vAlign);\n                    this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n                };\n                var contentBox = targetBox.clone();\n                if (hasSetSize) {\n                    contentBox.x2 = contentBox.x1 + width;\n                    contentBox.y2 = contentBox.y1 + height;\n                }\n                if (shrinkToFit) {\n                    contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n                }\n                ChartElement.fn.reflow.call(this, contentBox);\n                if (hasSetSize) {\n                    box = this.box = new Box(0, 0, width, height);\n                } else {\n                    box = this.box;\n                }\n                if (shrinkToFit && hasSetSize) {\n                    reflowPaddingBox();\n                    contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n                } else {\n                    contentBox = this.contentBox = box.clone();\n                    box.pad(padding).pad(borderWidth).pad(margin);\n                    reflowPaddingBox();\n                }\n                this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n                var children = this.children;\n                for (var i = 0; i < children.length; i++) {\n                    var item = children[i];\n                    item.reflow(item.box);\n                }\n            },\n            align: function (targetBox, axis, alignment) {\n                this.box.align(targetBox, axis, alignment);\n            },\n            hasBox: function () {\n                var options = this.options;\n                return options.border.width || options.background;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                if (options.visible && this.hasBox()) {\n                    this.visual.append(Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n                }\n            },\n            visualStyle: function () {\n                var options = this.options;\n                var border = options.border || {};\n                return {\n                    stroke: {\n                        width: border.width,\n                        color: border.color,\n                        opacity: valueOrDefault(border.opacity, options.opacity),\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    cursor: options.cursor\n                };\n            }\n        });\n        setDefaultOptions(BoxElement, {\n            align: LEFT,\n            vAlign: TOP,\n            margin: {},\n            padding: {},\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            background: '',\n            shrinkToFit: false,\n            width: 0,\n            height: 0,\n            visible: true\n        });\n        var ShapeElement = BoxElement.extend({\n            init: function (options, pointData) {\n                BoxElement.fn.init.call(this, options);\n                this.pointData = pointData;\n            },\n            getElement: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.paddingBox;\n                var type = options.type;\n                var rotation = options.rotation;\n                var center = box.center();\n                var halfWidth = box.width() / 2;\n                if (!options.visible || !this.hasBox()) {\n                    return null;\n                }\n                var style = this.visualStyle();\n                var element;\n                if (type === CIRCLE) {\n                    element = new drawing.Circle(new Circle([\n                        round(box.x1 + halfWidth, COORD_PRECISION),\n                        round(box.y1 + box.height() / 2, COORD_PRECISION)\n                    ], halfWidth), style);\n                } else if (type === TRIANGLE) {\n                    element = Path.fromPoints([\n                        [\n                            box.x1 + halfWidth,\n                            box.y1\n                        ],\n                        [\n                            box.x1,\n                            box.y2\n                        ],\n                        [\n                            box.x2,\n                            box.y2\n                        ]\n                    ], style).close();\n                } else if (type === CROSS) {\n                    element = new drawing.MultiPath(style);\n                    element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n                    element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n                } else {\n                    element = Path.fromRect(box.toRect(), style);\n                }\n                if (rotation) {\n                    element.transform(geometryTransform().rotate(-rotation, [\n                        center.x,\n                        center.y\n                    ]));\n                }\n                element.options.zIndex = options.zIndex;\n                return element;\n            },\n            createElement: function () {\n                var this$1 = this;\n                var customVisual = this.options.visual;\n                var pointData = this.pointData || {};\n                var visual;\n                if (customVisual) {\n                    visual = customVisual({\n                        value: pointData.value,\n                        dataItem: pointData.dataItem,\n                        sender: this.getSender(),\n                        series: pointData.series,\n                        category: pointData.category,\n                        rect: this.paddingBox.toRect(),\n                        options: this.visualOptions(),\n                        createVisual: function () {\n                            return this$1.getElement();\n                        }\n                    });\n                } else {\n                    visual = this.getElement();\n                }\n                return visual;\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    margin: options.margin,\n                    padding: options.padding,\n                    type: options.type,\n                    size: options.width,\n                    visible: options.visible\n                };\n            },\n            createVisual: function () {\n                this.visual = this.createElement();\n            }\n        });\n        setDefaultOptions(ShapeElement, {\n            type: CIRCLE,\n            align: CENTER,\n            vAlign: CENTER\n        });\n        var LINEAR = 'linear';\n        var RADIAL = 'radial';\n        var GRADIENTS = {\n            glass: {\n                type: LINEAR,\n                rotation: 0,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.25,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 1,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.55\n                    },\n                    {\n                        offset: 0.65,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0.25\n                    }\n                ]\n            },\n            roundedBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0.33,\n                        color: WHITE,\n                        opacity: 0.06\n                    },\n                    {\n                        offset: 0.83,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            roundedGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.5,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.15,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.17,\n                        color: WHITE,\n                        opacity: 0.35\n                    },\n                    {\n                        offset: 0.85,\n                        color: WHITE,\n                        opacity: 0.05\n                    },\n                    {\n                        offset: 0.87,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            bubbleShadow: {\n                type: RADIAL,\n                center: [\n                    0.5,\n                    0.5\n                ],\n                radius: 0.5\n            }\n        };\n        function boxDiff(r, s) {\n            if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n                return s;\n            }\n            var a = Math.min(r.x1, s.x1);\n            var b = Math.max(r.x1, s.x1);\n            var c = Math.min(r.x2, s.x2);\n            var d = Math.max(r.x2, s.x2);\n            var e = Math.min(r.y1, s.y1);\n            var f = Math.max(r.y1, s.y1);\n            var g = Math.min(r.y2, s.y2);\n            var h = Math.max(r.y2, s.y2);\n            var boxes = [];\n            boxes[0] = new Box(b, e, c, f);\n            boxes[1] = new Box(a, f, b, g);\n            boxes[2] = new Box(c, f, d, g);\n            boxes[3] = new Box(b, g, c, h);\n            if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n                boxes[4] = new Box(a, e, b, f);\n                boxes[5] = new Box(c, g, d, h);\n            } else {\n                boxes[4] = new Box(c, e, d, f);\n                boxes[5] = new Box(a, g, b, h);\n            }\n            return grep(boxes, function (box) {\n                return box.height() > 0 && box.width() > 0;\n            })[0];\n        }\n        var RootElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                var rootOptions = this.options;\n                rootOptions.width = parseInt(rootOptions.width, 10);\n                rootOptions.height = parseInt(rootOptions.height, 10);\n                this.gradients = {};\n            },\n            reflow: function () {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var currentBox = new Box(0, 0, options.width, options.height);\n                this.box = currentBox.unpad(options.margin);\n                for (var i = 0; i < children.length; i++) {\n                    children[i].reflow(currentBox);\n                    currentBox = boxDiff(currentBox, children[i].box) || new Box();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group();\n                this.createBackground();\n            },\n            createBackground: function () {\n                var options = this.options;\n                var border = options.border || {};\n                var box = this.box.clone().pad(options.margin).unpad(border.width);\n                var background = Path.fromRect(box.toRect(), {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    zIndex: -10\n                });\n                this.visual.append(background);\n            },\n            getRoot: function () {\n                return this;\n            },\n            createGradient: function (options) {\n                var gradients = this.gradients;\n                var hashCode = objectKey(options);\n                var gradient = GRADIENTS[options.gradient];\n                var drawingGradient;\n                if (gradients[hashCode]) {\n                    drawingGradient = gradients[hashCode];\n                } else {\n                    var gradientOptions = $.extend({}, gradient, options);\n                    if (gradient.type === 'linear') {\n                        drawingGradient = new drawing.LinearGradient(gradientOptions);\n                    } else {\n                        if (options.innerRadius) {\n                            gradientOptions.stops = innerRadialStops(gradientOptions);\n                        }\n                        drawingGradient = new drawing.RadialGradient(gradientOptions);\n                        drawingGradient.supportVML = gradient.supportVML !== false;\n                    }\n                    gradients[hashCode] = drawingGradient;\n                }\n                return drawingGradient;\n            }\n        });\n        setDefaultOptions(RootElement, {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            background: WHITE,\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            margin: getSpacing(5),\n            zIndex: -2\n        });\n        function innerRadialStops(options) {\n            var stops = options.stops;\n            var usedSpace = options.innerRadius / options.radius * 100;\n            var length = stops.length;\n            var currentStops = [];\n            for (var i = 0; i < length; i++) {\n                var currentStop = $.extend({}, stops[i]);\n                currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n                currentStops.push(currentStop);\n            }\n            return currentStops;\n        }\n        var FloatElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this._initDirection();\n            },\n            _initDirection: function () {\n                var options = this.options;\n                if (options.vertical) {\n                    this.groupAxis = X;\n                    this.elementAxis = Y;\n                    this.groupSizeField = WIDTH;\n                    this.elementSizeField = HEIGHT;\n                    this.groupSpacing = options.spacing;\n                    this.elementSpacing = options.vSpacing;\n                } else {\n                    this.groupAxis = Y;\n                    this.elementAxis = X;\n                    this.groupSizeField = HEIGHT;\n                    this.elementSizeField = WIDTH;\n                    this.groupSpacing = options.vSpacing;\n                    this.elementSpacing = options.spacing;\n                }\n            },\n            reflow: function (targetBox) {\n                this.box = targetBox.clone();\n                this.reflowChildren();\n            },\n            reflowChildren: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var elementAxis = ref.elementAxis;\n                var groupAxis = ref.groupAxis;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var ref$1 = this.groupOptions();\n                var groups = ref$1.groups;\n                var groupsSize = ref$1.groupsSize;\n                var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n                var groupsCount = groups.length;\n                var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n                if (groupsCount) {\n                    var groupStart = groupsStart;\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        var group = groups[groupIdx];\n                        var groupElements = group.groupElements;\n                        var elementStart = box[elementAxis + 1];\n                        var groupElementsCount = groupElements.length;\n                        for (var idx = 0; idx < groupElementsCount; idx++) {\n                            var element = groupElements[idx];\n                            var elementSize$$1 = this$1.elementSize(element);\n                            var groupElementStart = groupStart + this$1.alignStart(elementSize$$1[groupSizeField], group.groupSize);\n                            var elementBox = new Box();\n                            elementBox[groupAxis + 1] = groupElementStart;\n                            elementBox[groupAxis + 2] = groupElementStart + elementSize$$1[groupSizeField];\n                            elementBox[elementAxis + 1] = elementStart;\n                            elementBox[elementAxis + 2] = elementStart + elementSize$$1[elementSizeField];\n                            element.reflow(elementBox);\n                            elementStart += elementSize$$1[elementSizeField] + this$1.elementSpacing;\n                        }\n                        groupStart += group.groupSize + this$1.groupSpacing;\n                    }\n                    box[groupAxis + 1] = groupsStart;\n                    box[groupAxis + 2] = groupsStart + groupsSize;\n                    box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n                }\n            },\n            alignStart: function (size, maxSize) {\n                var start = 0;\n                var align = this.options.align;\n                if (align === RIGHT || align === BOTTOM) {\n                    start = maxSize - size;\n                } else if (align === CENTER) {\n                    start = (maxSize - size) / 2;\n                }\n                return start;\n            },\n            groupOptions: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var children = ref.children;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var elementSpacing = ref.elementSpacing;\n                var groupSpacing = ref.groupSpacing;\n                var maxSize = round(box[elementSizeField]());\n                var childrenCount = children.length;\n                var groups = [];\n                var groupSize = 0;\n                var groupElementsSize = 0;\n                var groupsSize = 0;\n                var maxGroupElementsSize = 0;\n                var groupElements = [];\n                for (var idx = 0; idx < childrenCount; idx++) {\n                    var element = children[idx];\n                    if (!element.box) {\n                        element.reflow(box);\n                    }\n                    var elementSize$$1 = this$1.elementSize(element);\n                    if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize$$1[elementSizeField]) > maxSize) {\n                        groups.push({\n                            groupElements: groupElements,\n                            groupSize: groupSize,\n                            groupElementsSize: groupElementsSize\n                        });\n                        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                        groupsSize += groupSpacing + groupSize;\n                        groupSize = 0;\n                        groupElementsSize = 0;\n                        groupElements = [];\n                    }\n                    groupSize = Math.max(groupSize, elementSize$$1[groupSizeField]);\n                    if (groupElementsSize > 0) {\n                        groupElementsSize += elementSpacing;\n                    }\n                    groupElementsSize += elementSize$$1[elementSizeField];\n                    groupElements.push(element);\n                }\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSize;\n                return {\n                    groups: groups,\n                    groupsSize: groupsSize,\n                    maxGroupElementsSize: maxGroupElementsSize\n                };\n            },\n            elementSize: function (element) {\n                return {\n                    width: element.box.width(),\n                    height: element.box.height()\n                };\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(FloatElement, {\n            vertical: true,\n            wrap: true,\n            vSpacing: 0,\n            spacing: 0\n        });\n        var DrawingText = drawing.Text;\n        var Text = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.content = content;\n                this.reflow(new Box());\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var size = options.size = util.measureText(this.content, { font: options.font });\n                this.baseline = size.baseline;\n                this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n            },\n            createVisual: function () {\n                var ref = this.options;\n                var font = ref.font;\n                var color = ref.color;\n                var opacity = ref.opacity;\n                var cursor = ref.cursor;\n                this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n                    font: font,\n                    fill: {\n                        color: color,\n                        opacity: opacity\n                    },\n                    cursor: cursor\n                });\n            }\n        });\n        setDefaultOptions(Text, {\n            font: DEFAULT_FONT,\n            color: BLACK\n        });\n        function rectToBox(rect) {\n            var origin = rect.origin;\n            var bottomRight = rect.bottomRight();\n            return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n        }\n        var ROWS_SPLIT_REGEX = /\\n/m;\n        var TextBox = BoxElement.extend({\n            init: function (content, options) {\n                BoxElement.fn.init.call(this, options);\n                this.content = content;\n                this._initContainer();\n                if (this.options._autoReflow !== false) {\n                    this.reflow(new Box());\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n                var floatElement = new FloatElement({\n                    vertical: true,\n                    align: options.align,\n                    wrap: false\n                });\n                var textOptions = deepExtend({}, options, {\n                    opacity: 1,\n                    animation: null\n                });\n                this.container = floatElement;\n                this.append(floatElement);\n                for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n                    var text = new Text(rows[rowIdx].trim(), textOptions);\n                    floatElement.append(text);\n                }\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var visualFn = options.visual;\n                this.container.options.align = options.align;\n                if (visualFn && !this._boxReflow) {\n                    var visualBox = targetBox;\n                    if (!visualBox.hasSize()) {\n                        this._boxReflow = true;\n                        this.reflow(visualBox);\n                        this._boxReflow = false;\n                        visualBox = this.box;\n                    }\n                    var visual = this.visual = visualFn(this.visualContext(visualBox));\n                    if (visual) {\n                        visualBox = rectToBox(visual.clippedBBox() || new Rect());\n                        visual.options.zIndex = options.zIndex;\n                    }\n                    this.box = this.contentBox = this.paddingBox = visualBox;\n                } else {\n                    BoxElement.fn.reflow.call(this, targetBox);\n                    if (options.rotation) {\n                        var margin = getSpacing(options.margin);\n                        var box = this.box.unpad(margin);\n                        this.targetBox = targetBox;\n                        this.normalBox = box.clone();\n                        box = this.rotate();\n                        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n                        this.rotatedBox = box.clone();\n                        box.pad(margin);\n                    }\n                }\n            },\n            createVisual: function () {\n                var options = this.options;\n                if (!options.visible) {\n                    return;\n                }\n                this.visual = new Group({\n                    transform: this.rotationTransform(),\n                    zIndex: options.zIndex,\n                    noclip: options.noclip\n                });\n                if (this.hasBox()) {\n                    var box = Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n                    this.visual.append(box);\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visual) {\n                    var visual = this.visual;\n                    if (visual && !defined(visual.options.noclip)) {\n                        visual.options.noclip = this.options.noclip;\n                    }\n                    this.addVisual();\n                    this.createAnimation();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    color: options.color,\n                    font: options.font,\n                    margin: options.margin,\n                    padding: options.padding,\n                    visible: options.visible\n                };\n            },\n            visualContext: function (targetBox) {\n                var this$1 = this;\n                return {\n                    text: this.content,\n                    rect: targetBox.toRect(),\n                    sender: this.getSender(),\n                    options: this.visualOptions(),\n                    createVisual: function () {\n                        this$1._boxReflow = true;\n                        this$1.reflow(targetBox);\n                        this$1._boxReflow = false;\n                        return this$1.getDefaultVisual();\n                    }\n                };\n            },\n            getDefaultVisual: function () {\n                this.createVisual();\n                this.renderChildren();\n                var visual = this.visual;\n                delete this.visual;\n                return visual;\n            },\n            rotate: function () {\n                var options = this.options;\n                this.box.rotate(options.rotation);\n                this.align(this.targetBox, X, options.align);\n                this.align(this.targetBox, Y, options.vAlign);\n                return this.box;\n            },\n            rotationTransform: function () {\n                var rotation = this.options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                var ref = this.normalBox.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var boxCenter = this.rotatedBox.center();\n                return geometryTransform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [\n                    cx,\n                    cy\n                ]);\n            }\n        });\n        var Title = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.append(new TextBox(this.options.text, $.extend({}, this.options, { vAlign: this.options.position })));\n            },\n            reflow: function (targetBox) {\n                ChartElement.fn.reflow.call(this, targetBox);\n                this.box.snapTo(targetBox, X);\n            }\n        });\n        Title.buildTitle = function (options, parent, defaultOptions) {\n            var titleOptions = options;\n            if (typeof options === 'string') {\n                titleOptions = { text: options };\n            }\n            titleOptions = $.extend({ visible: true }, defaultOptions, titleOptions);\n            var title;\n            if (titleOptions && titleOptions.visible && titleOptions.text) {\n                title = new Title(titleOptions);\n                parent.append(title);\n            }\n            return title;\n        };\n        setDefaultOptions(Title, {\n            color: BLACK,\n            position: TOP,\n            align: CENTER,\n            margin: getSpacing(5),\n            padding: getSpacing(5)\n        });\n        var AxisLabel = TextBox.extend({\n            init: function (value, text, index, dataItem, options) {\n                TextBox.fn.init.call(this, text, options);\n                this.text = text;\n                this.value = value;\n                this.index = index;\n                this.dataItem = dataItem;\n                this.reflow(new Box());\n            },\n            visualContext: function (targetBox) {\n                var context = TextBox.fn.visualContext.call(this, targetBox);\n                context.value = this.value;\n                context.dataItem = this.dataItem;\n                context.format = this.options.format;\n                context.culture = this.options.culture;\n                return context;\n            },\n            click: function (widget, e) {\n                widget.trigger(AXIS_LABEL_CLICK, {\n                    element: eventElement(e),\n                    value: this.value,\n                    text: this.text,\n                    index: this.index,\n                    dataItem: this.dataItem,\n                    axis: this.parent.options\n                });\n            },\n            rotate: function () {\n                if (this.options.alignRotation !== CENTER) {\n                    var box = this.normalBox.toRect();\n                    var transform = this.rotationTransform();\n                    this.box = rectToBox(box.bbox(transform.matrix()));\n                } else {\n                    TextBox.fn.rotate.call(this);\n                }\n                return this.box;\n            },\n            rotationTransform: function () {\n                var options = this.options;\n                var rotation = options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                if (options.alignRotation === CENTER) {\n                    return TextBox.fn.rotationTransform.call(this);\n                }\n                var rotationMatrix = geometryTransform().rotate(rotation).matrix();\n                var box = this.normalBox.toRect();\n                var rect = this.targetBox.toRect();\n                var rotationOrigin = options.rotationOrigin || TOP;\n                var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n                var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n                var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n                var topLeft = box.topLeft().transformCopy(rotationMatrix);\n                var topRight = box.topRight().transformCopy(rotationMatrix);\n                var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n                var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n                var rotatedBox = Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n                var translate = {};\n                translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n                var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var alignStart, alignEnd;\n                if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n                    alignStart = topLeft;\n                    alignEnd = topRight;\n                } else if (distanceRight < distanceLeft) {\n                    alignStart = topRight;\n                    alignEnd = bottomRight;\n                } else {\n                    alignStart = topLeft;\n                    alignEnd = bottomLeft;\n                }\n                var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n                translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n                return geometryTransform().translate(translate.x, translate.y).rotate(rotation);\n            }\n        });\n        setDefaultOptions(AxisLabel, { _autoReflow: false });\n        var DEFAULT_ICON_SIZE = 7;\n        var DEFAULT_LABEL_COLOR = '#fff';\n        var Note = BoxElement.extend({\n            init: function (fields, options, chartService) {\n                BoxElement.fn.init.call(this, options);\n                this.fields = fields;\n                this.chartService = chartService;\n                this.render();\n            },\n            hide: function () {\n                this.options.visible = false;\n            },\n            show: function () {\n                this.options.visible = true;\n            },\n            render: function () {\n                var options = this.options;\n                if (options.visible) {\n                    var label = options.label;\n                    var icon = options.icon;\n                    var box = new Box();\n                    var size = icon.size;\n                    var text = this.fields.text;\n                    var width, height;\n                    if (defined(label) && label.visible) {\n                        var noteTemplate = getTemplate(label);\n                        if (noteTemplate) {\n                            text = noteTemplate(this.fields);\n                        } else if (label.format) {\n                            text = this.chartService.format.auto(label.format, text);\n                        }\n                        if (!label.color) {\n                            label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                        }\n                        this.label = new TextBox(text, deepExtend({}, label));\n                        if (label.position === INSIDE && !defined(size)) {\n                            if (icon.type === CIRCLE) {\n                                size = Math.max(this.label.box.width(), this.label.box.height());\n                            } else {\n                                width = this.label.box.width();\n                                height = this.label.box.height();\n                            }\n                            box.wrap(this.label.box);\n                        }\n                    }\n                    icon.width = width || size || DEFAULT_ICON_SIZE;\n                    icon.height = height || size || DEFAULT_ICON_SIZE;\n                    var marker = new ShapeElement(deepExtend({}, icon));\n                    this.marker = marker;\n                    this.append(marker);\n                    if (this.label) {\n                        this.append(this.label);\n                    }\n                    marker.reflow(new Box());\n                    this.wrapperBox = box.wrap(marker.box);\n                }\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var marker = ref.marker;\n                var wrapperBox = ref.wrapperBox;\n                var center = targetBox.center();\n                var length = options.line.length;\n                var position = options.position;\n                if (options.visible) {\n                    var lineStart, box, contentBox;\n                    if (inArray(position, [\n                            LEFT,\n                            RIGHT\n                        ])) {\n                        if (position === LEFT) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x1,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x2,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x2,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x1,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    } else {\n                        if (position === BOTTOM) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y2\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y1\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y1\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y2\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    }\n                    if (marker) {\n                        marker.reflow(contentBox);\n                    }\n                    if (label) {\n                        label.reflow(contentBox);\n                        if (marker) {\n                            if (options.label.position === OUTSIDE) {\n                                label.box.alignTo(marker.box, position);\n                            }\n                            label.reflow(label.box);\n                        }\n                    }\n                    this.contentBox = contentBox;\n                    this.targetBox = targetBox;\n                    this.box = box || contentBox;\n                }\n            },\n            createVisual: function () {\n                BoxElement.fn.createVisual.call(this);\n                this.visual.options.noclip = this.options.noclip;\n                if (this.options.visible) {\n                    this.createLine();\n                }\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (options.visible && customVisual) {\n                    this.visual = customVisual($.extend(this.fields, {\n                        sender: this.getSender(),\n                        rect: this.targetBox.toRect(),\n                        options: {\n                            background: options.background,\n                            border: options.background,\n                            icon: options.icon,\n                            label: options.label,\n                            line: options.line,\n                            position: options.position,\n                            visible: options.visible\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    }));\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            createLine: function () {\n                var options = this.options.line;\n                if (this.linePoints) {\n                    var path = Path.fromPoints(this.linePoints, {\n                        stroke: {\n                            color: options.color,\n                            width: options.width,\n                            dashType: options.dashType\n                        }\n                    });\n                    alignPathToPixel(path);\n                    this.visual.append(path);\n                }\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_HOVER, args)) {\n                    e.preventDefault();\n                }\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return $.extend(this.fields, {\n                    element: eventElement(e),\n                    text: defined(options.label) ? options.label.text : '',\n                    visual: this.visual\n                });\n            }\n        });\n        setDefaultOptions(Note, {\n            icon: {\n                visible: true,\n                type: CIRCLE\n            },\n            label: {\n                position: INSIDE,\n                visible: true,\n                align: CENTER,\n                vAlign: CENTER\n            },\n            line: { visible: true },\n            visible: true,\n            position: TOP,\n            zIndex: 2\n        });\n        function createAxisTick(options, tickOptions) {\n            var tickX = options.tickX;\n            var tickY = options.tickY;\n            var position = options.position;\n            var tick = new Path({\n                stroke: {\n                    width: tickOptions.width,\n                    color: tickOptions.color\n                }\n            });\n            if (options.vertical) {\n                tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n            } else {\n                tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n            }\n            alignPathToPixel(tick);\n            return tick;\n        }\n        function createAxisGridLine(options, gridLine) {\n            var lineStart = options.lineStart;\n            var lineEnd = options.lineEnd;\n            var position = options.position;\n            var line = new Path({\n                stroke: {\n                    width: gridLine.width,\n                    color: gridLine.color,\n                    dashType: gridLine.dashType\n                }\n            });\n            if (options.vertical) {\n                line.moveTo(lineStart, position).lineTo(lineEnd, position);\n            } else {\n                line.moveTo(position, lineStart).lineTo(position, lineEnd);\n            }\n            alignPathToPixel(line);\n            return line;\n        }\n        var Axis = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = new ChartService();\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!this.options.visible) {\n                    this.options = deepExtend({}, this.options, {\n                        labels: { visible: false },\n                        line: { visible: false },\n                        margin: 0,\n                        majorTickSize: 0,\n                        minorTickSize: 0\n                    });\n                }\n                this.options.minorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.minorTickType !== NONE\n                }, this.options.minorTicks, {\n                    size: this.options.minorTickSize,\n                    align: this.options.minorTickType\n                });\n                this.options.majorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.majorTickType !== NONE\n                }, this.options.majorTicks, {\n                    size: this.options.majorTickSize,\n                    align: this.options.majorTickType\n                });\n                if (!this.options._deferLabels) {\n                    this.createLabels();\n                }\n                this.createTitle();\n                this.createNotes();\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.labelsCount()\n                };\n            },\n            createLabels: function () {\n                var this$1 = this;\n                var options = this.options;\n                var align = options.vertical ? RIGHT : CENTER;\n                var labelOptions = deepExtend({}, options.labels, {\n                    align: align,\n                    zIndex: options.zIndex\n                });\n                var step = Math.max(1, labelOptions.step);\n                this.children = grep(this.children, function (child) {\n                    return !(child instanceof AxisLabel);\n                });\n                this.labels = [];\n                if (labelOptions.visible) {\n                    var range = this.labelsRange();\n                    var rotation = labelOptions.rotation;\n                    if (isObject(rotation)) {\n                        labelOptions.alignRotation = rotation.align;\n                        labelOptions.rotation = rotation.angle;\n                    }\n                    if (labelOptions.rotation === 'auto') {\n                        labelOptions.rotation = 0;\n                        options.autoRotateLabels = true;\n                    }\n                    for (var idx = range.min; idx < range.max; idx += step) {\n                        var label = this$1.createAxisLabel(idx, labelOptions);\n                        if (label) {\n                            this$1.append(label);\n                            this$1.labels.push(label);\n                        }\n                    }\n                }\n            },\n            lineBox: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var axisX = mirror ? box.x1 : box.x2;\n                var axisY = mirror ? box.y2 : box.y1;\n                var lineWidth = options.line.width || 0;\n                return vertical ? new Box(axisX, box.y1, axisX, box.y2 - lineWidth) : new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n            },\n            createTitle: function () {\n                var options = this.options;\n                var titleOptions = deepExtend({\n                    rotation: options.vertical ? -90 : 0,\n                    text: '',\n                    zIndex: 1,\n                    visualSize: true\n                }, options.title);\n                if (titleOptions.visible && titleOptions.text) {\n                    var title = new TextBox(titleOptions.text, titleOptions);\n                    this.append(title);\n                    this.title = title;\n                }\n            },\n            createNotes: function () {\n                var this$1 = this;\n                var options = this.options;\n                var notes = options.notes;\n                var items = notes.data || [];\n                this.notes = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = deepExtend({}, notes, items[i]);\n                    item.value = this$1.parseNoteValue(item.value);\n                    var note = new Note({\n                        value: item.value,\n                        text: item.label.text,\n                        dataItem: item\n                    }, item, this$1.chartService);\n                    if (note.options.visible) {\n                        if (defined(note.options.position)) {\n                            if (options.vertical && !inArray(note.options.position, [\n                                    LEFT,\n                                    RIGHT\n                                ])) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else if (!options.vertical && !inArray(note.options.position, [\n                                    TOP,\n                                    BOTTOM\n                                ])) {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        } else {\n                            if (options.vertical) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        }\n                        this$1.append(note);\n                        this$1.notes.push(note);\n                    }\n                }\n            },\n            parseNoteValue: function (value) {\n                return value;\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                this.createPlotBands();\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this.createBackground();\n                this.createLine();\n            },\n            gridLinesVisual: function () {\n                var gridLines = this._gridLines;\n                if (!gridLines) {\n                    gridLines = this._gridLines = new Group({ zIndex: -2 });\n                    this.appendVisual(this._gridLines);\n                }\n                return gridLines;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = { vertical: options.vertical };\n                function render(tickPositions, tickOptions, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, tickOptions.step);\n                    if (tickOptions.visible) {\n                        for (var i = tickOptions.skip; i < count; i += step) {\n                            if (defined(skipUnit) && i % skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), options.majorTicks);\n                render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n            },\n            createLine: function () {\n                var options = this.options;\n                var line = options.line;\n                var lineBox = this.lineBox();\n                if (line.width > 0 && line.visible) {\n                    var path = new Path({\n                        stroke: {\n                            width: line.width,\n                            color: line.color,\n                            dashType: line.dashType\n                        }\n                    });\n                    path.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    if (options._alignLines) {\n                        alignPathToPixel(path);\n                    }\n                    var group = this._lineGroup = new Group();\n                    group.append(path);\n                    this.visual.append(group);\n                    this.createTicks(group);\n                }\n            },\n            getActualTickSize: function () {\n                var options = this.options;\n                var tickSize = 0;\n                if (options.majorTicks.visible && options.minorTicks.visible) {\n                    tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n                } else if (options.majorTicks.visible) {\n                    tickSize = options.majorTicks.size;\n                } else if (options.minorTicks.visible) {\n                    tickSize = options.minorTicks.size;\n                }\n                return tickSize;\n            },\n            createBackground: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var background = options.background;\n                if (background) {\n                    this._backgroundPath = Path.fromRect(box.toRect(), {\n                        fill: { color: background },\n                        stroke: null\n                    });\n                    this.visual.append(this._backgroundPath);\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var options = this.options;\n                var plotBands = options.plotBands || [];\n                var vertical = options.vertical;\n                var plotArea = this.plotArea;\n                if (plotBands.length === 0) {\n                    return;\n                }\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                var altAxis = grep(this.pane.axes, function (axis) {\n                    return axis.options.vertical !== this$1.options.vertical;\n                })[0];\n                for (var idx = 0; idx < plotBands.length; idx++) {\n                    var item = plotBands[idx];\n                    var slotX = void 0, slotY = void 0;\n                    if (vertical) {\n                        slotX = (altAxis || plotArea.axisX).lineBox();\n                        slotY = this$1.getSlot(item.from, item.to, true);\n                    } else {\n                        slotX = this$1.getSlot(item.from, item.to, true);\n                        slotY = (altAxis || plotArea.axisY).lineBox();\n                    }\n                    if (slotX.width() !== 0 && slotY.height() !== 0) {\n                        var bandRect = new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.width(),\n                            slotY.height()\n                        ]);\n                        var path = Path.fromRect(bandRect, {\n                            fill: {\n                                color: item.color,\n                                opacity: item.opacity\n                            },\n                            stroke: null\n                        });\n                        group.append(path);\n                    }\n                }\n                this.appendVisual(group);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var minorUnit = options.minorUnit;\n                var vertical = options.vertical;\n                var axisLineVisible = altAxis.options.line.visible;\n                var majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n                var lineBox = altAxis.lineBox();\n                var linePos = lineBox[vertical ? 'y1' : 'x1'];\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPositions, gridLine, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, gridLine.step);\n                    if (gridLine.visible) {\n                        for (var i = gridLine.skip; i < count; i += step) {\n                            var pos = round(tickPositions[i]);\n                            if (!inArray(pos, majorTicks)) {\n                                if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                                    lineOptions.position = pos;\n                                    container.append(createAxisGridLine(lineOptions, gridLine));\n                                    majorTicks.push(pos);\n                                }\n                            }\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), majorGridLines);\n                render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n                return container.children;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var title = ref.title;\n                var vertical = options.vertical;\n                var count = labels.length;\n                var sizeFn = vertical ? WIDTH : HEIGHT;\n                var titleSize = title ? title.box[sizeFn]() : 0;\n                var space = this.getActualTickSize() + options.margin + titleSize;\n                var rootBox = (this.getRoot() || {}).box || box;\n                var boxSize = rootBox[sizeFn]();\n                var maxLabelSize = 0;\n                for (var i = 0; i < count; i++) {\n                    var labelSize = labels[i].box[sizeFn]();\n                    if (labelSize + space <= boxSize) {\n                        maxLabelSize = Math.max(maxLabelSize, labelSize);\n                    }\n                }\n                if (vertical) {\n                    this.box = new Box(box.x1, box.y1, box.x1 + maxLabelSize + space, box.y2);\n                } else {\n                    this.box = new Box(box.x1, box.y1, box.x2, box.y1 + maxLabelSize + space);\n                }\n                this.arrangeTitle();\n                this.arrangeLabels();\n                this.arrangeNotes();\n            },\n            getLabelsTickPositions: function () {\n                return this.getMajorTickPositions();\n            },\n            labelTickIndex: function (label) {\n                return label.index;\n            },\n            arrangeLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelsBetweenTicks = !options.justified;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var tickPositions = this.getLabelsTickPositions();\n                var labelOffset = this.getActualTickSize() + options.margin;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var labelSize = vertical ? label.box.height() : label.box.width();\n                    var labelPos = tickPositions[tickIx] - labelSize / 2;\n                    var labelBox = void 0, firstTickPosition = void 0, nextTickPosition = void 0;\n                    if (vertical) {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                            var middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                            labelPos = middle - labelSize / 2;\n                        }\n                        var labelX = lineBox.x2;\n                        if (mirror) {\n                            labelX += labelOffset;\n                            label.options.rotationOrigin = LEFT;\n                        } else {\n                            labelX -= labelOffset + label.box.width();\n                            label.options.rotationOrigin = RIGHT;\n                        }\n                        labelBox = label.box.move(labelX, labelPos);\n                    } else {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                        } else {\n                            firstTickPosition = labelPos;\n                            nextTickPosition = labelPos + labelSize;\n                        }\n                        var labelY = lineBox.y1;\n                        if (mirror) {\n                            labelY -= labelOffset + label.box.height();\n                            label.options.rotationOrigin = BOTTOM;\n                        } else {\n                            labelY += labelOffset;\n                            label.options.rotationOrigin = TOP;\n                        }\n                        labelBox = new Box(firstTickPosition, labelY, nextTickPosition, labelY + label.box.height());\n                    }\n                    label.reflow(labelBox);\n                }\n            },\n            autoRotateLabels: function () {\n                if (this.options.autoRotateLabels && !this.options.vertical) {\n                    var tickPositions = this.getMajorTickPositions();\n                    var labels = this.labels;\n                    var angle;\n                    for (var idx = 0; idx < labels.length; idx++) {\n                        var width = Math.abs(tickPositions[idx + 1] - tickPositions[idx]);\n                        var labelBox = labels[idx].box;\n                        if (labelBox.width() > width) {\n                            if (labelBox.height() > width) {\n                                angle = -90;\n                                break;\n                            }\n                            angle = -45;\n                        }\n                    }\n                    if (angle) {\n                        for (var idx$1 = 0; idx$1 < labels.length; idx$1++) {\n                            labels[idx$1].options.rotation = angle;\n                            labels[idx$1].reflow(new Box());\n                        }\n                        return true;\n                    }\n                }\n            },\n            arrangeTitle: function () {\n                var ref = this;\n                var options = ref.options;\n                var title = ref.title;\n                var mirror = options.labels.mirror;\n                var vertical = options.vertical;\n                if (title) {\n                    if (vertical) {\n                        title.options.align = mirror ? RIGHT : LEFT;\n                        title.options.vAlign = title.options.position;\n                    } else {\n                        title.options.align = title.options.position;\n                        title.options.vAlign = mirror ? TOP : BOTTOM;\n                    }\n                    title.reflow(this.box);\n                }\n            },\n            arrangeNotes: function () {\n                var this$1 = this;\n                for (var idx = 0; idx < this.notes.length; idx++) {\n                    var item = this$1.notes[idx];\n                    var value = item.options.value;\n                    var slot = void 0;\n                    if (defined(value)) {\n                        if (this$1.shouldRenderNote(value)) {\n                            item.show();\n                        } else {\n                            item.hide();\n                        }\n                        slot = this$1.noteSlot(value);\n                    } else {\n                        item.hide();\n                    }\n                    item.reflow(slot || this$1.lineBox());\n                }\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            alignTo: function (secondAxis) {\n                var lineBox = secondAxis.lineBox();\n                var vertical = this.options.vertical;\n                var pos = vertical ? Y : X;\n                this.box.snapTo(lineBox, pos);\n                if (vertical) {\n                    this.box.shrink(0, this.lineBox().height() - lineBox.height());\n                } else {\n                    this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n                }\n                this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n                this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n            },\n            axisLabelText: function (value, dataItem, options) {\n                var tmpl = getTemplate(options);\n                var text = value;\n                if (tmpl) {\n                    text = tmpl({\n                        value: value,\n                        dataItem: dataItem,\n                        format: options.format,\n                        culture: options.culture\n                    });\n                } else if (options.format) {\n                    text = this.chartService.format.localeAuto(options.format, [value], options.culture);\n                }\n                return text;\n            },\n            slot: function (from, to, limit) {\n                var slot = this.getSlot(from, to, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            contentBox: function () {\n                var box = this.box.clone();\n                var labels = this.labels;\n                if (labels.length) {\n                    if (labels[0].options.visible) {\n                        box.wrap(labels[0].box);\n                    }\n                    var lastLabel = labels[labels.length - 1];\n                    if (lastLabel.options.visible) {\n                        box.wrap(lastLabel.box);\n                    }\n                }\n                return box;\n            },\n            limitRange: function (from, to, min, max, offset) {\n                var options = this.options;\n                if (from < min && offset < 0 && (!defined(options.min) || options.min <= min) || max < to && offset > 0 && (!defined(options.max) || max <= options.max)) {\n                    return null;\n                }\n                if (to < min && offset > 0 || max < from && offset < 0) {\n                    return {\n                        min: from,\n                        max: to\n                    };\n                }\n                var rangeSize = to - from;\n                var minValue = from;\n                var maxValue = to;\n                if (from < min) {\n                    minValue = limitValue(from, min, max);\n                    maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n                } else if (to > max) {\n                    maxValue = limitValue(to, min, max);\n                    minValue = limitValue(to - rangeSize, min, max - rangeSize);\n                }\n                return {\n                    min: minValue,\n                    max: maxValue\n                };\n            },\n            valueRange: function () {\n                return {\n                    min: this.seriesMin,\n                    max: this.seriesMax\n                };\n            }\n        });\n        setDefaultOptions(Axis, {\n            labels: {\n                visible: true,\n                rotation: 0,\n                mirror: false,\n                step: 1,\n                skip: 0\n            },\n            line: {\n                width: 1,\n                color: BLACK,\n                visible: true\n            },\n            title: {\n                visible: true,\n                position: CENTER\n            },\n            majorTicks: {\n                align: OUTSIDE,\n                size: 4,\n                skip: 0,\n                step: 1\n            },\n            minorTicks: {\n                align: OUTSIDE,\n                size: 3,\n                skip: 0,\n                step: 1\n            },\n            axisCrossingValue: 0,\n            majorTickType: OUTSIDE,\n            minorTickType: NONE,\n            majorGridLines: {\n                skip: 0,\n                step: 1\n            },\n            minorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK,\n                skip: 0,\n                step: 1\n            },\n            margin: 5,\n            visible: true,\n            reverse: false,\n            justified: true,\n            notes: { label: { text: '' } },\n            _alignLines: true,\n            _deferLabels: false\n        });\n        var MILLISECONDS = 'milliseconds';\n        var SECONDS = 'seconds';\n        var MINUTES = 'minutes';\n        var HOURS = 'hours';\n        var DAYS = 'days';\n        var WEEKS = 'weeks';\n        var MONTHS = 'months';\n        var YEARS = 'years';\n        var TIME_PER_MILLISECOND = 1;\n        var TIME_PER_SECOND = 1000;\n        var TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\n        var TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\n        var TIME_PER_DAY = 24 * TIME_PER_HOUR;\n        var TIME_PER_WEEK = 7 * TIME_PER_DAY;\n        var TIME_PER_MONTH = 31 * TIME_PER_DAY;\n        var TIME_PER_YEAR = 365 * TIME_PER_DAY;\n        var TIME_PER_UNIT = {\n            'years': TIME_PER_YEAR,\n            'months': TIME_PER_MONTH,\n            'weeks': TIME_PER_WEEK,\n            'days': TIME_PER_DAY,\n            'hours': TIME_PER_HOUR,\n            'minutes': TIME_PER_MINUTE,\n            'seconds': TIME_PER_SECOND,\n            'milliseconds': TIME_PER_MILLISECOND\n        };\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b;\n            var offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function toDate(value) {\n            var result;\n            if (value instanceof Date) {\n                result = value;\n            } else if (value) {\n                result = new Date(value);\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            if (weekStartDay === void 0) {\n                weekStartDay = 0;\n            }\n            var daysToSubtract = 0;\n            var day = date.getDay();\n            if (!isNaN(day)) {\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n            return false;\n        }\n        function addHours(date, hours) {\n            var roundedDate = new Date(date);\n            roundedDate.setMinutes(0, 0, 0);\n            var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n            return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n        }\n        function addDuration(dateValue, value, unit, weekStartDay) {\n            var result = dateValue;\n            if (dateValue) {\n                var date = toDate(dateValue);\n                var hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addHours(date, value);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function floorDate(date, unit, weekStartDay) {\n            return addDuration(toDate(date), 0, unit, weekStartDay);\n        }\n        function ceilDate(dateValue, unit, weekStartDay) {\n            var date = toDate(dateValue);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateComparer(a, b) {\n            if (a && b) {\n                return a.getTime() - b.getTime();\n            }\n            return -1;\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                var result = [];\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push(toTime(value[idx]));\n                }\n                return result;\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var date = toDate(value);\n            var startDate = toDate(start);\n            var index;\n            if (baseUnit === MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0;\n            var high = sortedDates.length - 1;\n            var index;\n            while (low <= high) {\n                index = Math.floor((low + high) / 2);\n                var currentDate = sortedDates[index];\n                if (currentDate < date) {\n                    low = index + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = index - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[index - 1], date)) {\n                    index--;\n                }\n                return index;\n            }\n            if (sortedDates[index] <= date) {\n                return index;\n            }\n            return index - 1;\n        }\n        function parseDate(intlService, date) {\n            var result;\n            if (isString(date)) {\n                result = intlService.parseDate(date) || toDate(date);\n            } else {\n                result = toDate(date);\n            }\n            return result;\n        }\n        function parseDates(intlService, dates) {\n            if (isArray(dates)) {\n                var result = [];\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result.push(parseDate(intlService, dates[idx]));\n                }\n                return result;\n            }\n            return parseDate(intlService, dates);\n        }\n        var MIN_CATEGORY_POINTS_RANGE = 0.01;\n        function indexOf(value, arr) {\n            if (value instanceof Date) {\n                var length = arr.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (dateEquals(arr[idx], value)) {\n                        return idx;\n                    }\n                }\n                return -1;\n            }\n            return arr.indexOf(value);\n        }\n        var CategoryAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                this._ticks = {};\n                this._initCategories(this.options);\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? Math.floor(options.min) : 0;\n                    var max;\n                    if (definedMax) {\n                        max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n                    } else {\n                        max = categories.length;\n                    }\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: Math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var max = ref$1.max;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)];\n                var positions = [];\n                var current = min % 1 !== 0 ? Math.floor(min / 1) + stepSize : min;\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var range = this.rangeIndices();\n                var index = label.index;\n                if (range.min > 0) {\n                    index = index - Math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var ref = this;\n                var box = ref.box;\n                var labels = ref.labels;\n                if (labels.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    var firstLabel = labels[0];\n                    var lastLabel = last(labels);\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var cache = this._ticks;\n                var range = this.rangeIndices();\n                var lineBox = this.lineBox();\n                var hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = this.getTickPositions(1);\n                    cache.minorTicks = this.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var options = this.options;\n                var reverse = options.reverse;\n                var justified = options.justified;\n                var vertical = options.vertical;\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var slotBox = lineBox.clone();\n                var singleSlot = !defined(to);\n                var start = valueOrDefault(from, 0);\n                var end = valueOrDefault(to, start);\n                end = Math.max(end - 1, start);\n                end = Math.max(start, end);\n                var p1 = lineStart + (start - min) * scale;\n                var p2 = lineStart + (end + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            limitSlot: function (slot) {\n                var vertical = this.options.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var limittedSlot = slot.clone();\n                limittedSlot[valueAxis + 1] = limitValue(slot[valueAxis + 1], lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                limittedSlot[valueAxis + 2] = limitValue(slot[valueAxis + 2], lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                return limittedSlot;\n            },\n            slot: function (from, to, limit) {\n                var start = from;\n                var end = to;\n                if (typeof start === 'string') {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === 'string') {\n                    end = this.categoryIndex(end);\n                }\n                return Axis.fn.slot.call(this, start, end, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.rangeIndices();\n                var startValue = reverse ? range.max : range.min;\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + 1];\n                var lineEnd = lineBox[valueAxis + 2];\n                var pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var value = startValue + (pos - lineStart) / scale;\n                var diff = value % 1;\n                if (justified) {\n                    value = Math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return Math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = indexOf(value, options.srcCategories || options.categories);\n                return index - Math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = options.categories.length;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var ref = this.totalRange();\n                var totalMin = ref.min;\n                var totalMax = ref.max;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var range = this.options.categories.length;\n                var delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var justified = options.justified;\n                var labelOptions = options.labels;\n                var ref = this.totalRangeIndices(true);\n                var min = ref.min;\n                var max = ref.max;\n                var start = Math.floor(min);\n                if (!justified) {\n                    min = Math.floor(min);\n                    max = Math.ceil(max);\n                } else {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                }\n                var skip;\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var category = valueOrDefault(options.categories[index], '');\n                var text = this.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.totalRangeIndices();\n                return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n            },\n            noteSlot: function (value) {\n                var options = this.options;\n                var index = value - Math.floor(options.min || 0);\n                return this.getSlot(index);\n            },\n            arrangeNotes: function () {\n                Axis.fn.arrangeNotes.call(this);\n                this.hideOutOfRangeNotes();\n            },\n            hideOutOfRangeNotes: function () {\n                var ref = this;\n                var notes = ref.notes;\n                var box = ref.box;\n                if (notes && notes.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    for (var idx = 0; idx < notes.length; idx++) {\n                        var note = notes[idx];\n                        if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                            note.hide();\n                        }\n                    }\n                }\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var totalRange = this.totalRange();\n                var min = range.min + offset;\n                var max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                var rangeMin = Math.min(min, max);\n                var rangeMax = Math.max(min, max);\n                if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n                    return {\n                        min: rangeMin,\n                        max: rangeMax\n                    };\n                }\n            },\n            valueRange: function () {\n                return this.range();\n            }\n        });\n        setDefaultOptions(CategoryAxis, {\n            type: 'category',\n            categories: [],\n            vertical: false,\n            majorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK\n            },\n            labels: { zIndex: 1 },\n            justified: false,\n            _deferLabels: true\n        });\n        var COORDINATE_LIMIT = 300000;\n        var DateLabelFormats = {\n            milliseconds: 'HH:mm:ss.fff',\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var ZERO_THRESHOLD = 0.2;\n        var AUTO = 'auto';\n        var BASE_UNITS = [\n            MILLISECONDS,\n            SECONDS,\n            MINUTES,\n            HOURS,\n            DAYS,\n            WEEKS,\n            MONTHS,\n            YEARS\n        ];\n        var FIT = 'fit';\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (axisOptions, chartService) {\n                CategoryAxis.fn.init.call(this, axisOptions, chartService);\n                var intlService = chartService.intl;\n                var options = this.options;\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: parseDates(intlService, options.categories),\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    var baseUnit = (options.baseUnit || '').toLowerCase();\n                    var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = this.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        this.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    this.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this.options = options;\n            },\n            _initCategories: function () {\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                var categories = this.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return parseDate(this.chartService.intl, value);\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / (range.max - range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if (range.min && range.max) {\n                    var from = addTicks(options.min || range.min, offset);\n                    var to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var rounds = Math.abs(delta);\n                var result = this.range();\n                var from = result.min;\n                var to = result.max;\n                if (from && to) {\n                    while (rounds--) {\n                        var range = dateDiff(from, to);\n                        var step = Math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    result = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return result;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories;\n                var count = defined(categories) ? categories.length : 0;\n                var minDiff = MAX_VALUE;\n                var lastCategory, unit;\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    var category = categories[categoryIx];\n                    if (category && lastCategory) {\n                        var diff = absoluteDateDiff(category, lastCategory);\n                        if (diff > 0) {\n                            minDiff = Math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCategory = category;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = Math.floor(minIdx);\n                        maxIdx = options.justified ? Math.floor(maxIdx) : Math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = Math.floor(range.min);\n                var max = Math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round$$1 = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round$$1 ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round$$1 ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var ref = this.currentRange();\n                var min = ref.min;\n                var max = ref.max;\n                var totalLimits = this.totalLimits();\n                var scale = size / (max - min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(min, offset);\n                var to = addTicks(max, offset);\n                var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = options.baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var weekStartDay = options.weekStartDay;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var ref = this.currentRange();\n                var rangeMin = ref.min;\n                var rangeMax = ref.max;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit === FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var diff = dateDiff(max, min);\n                    var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n                    var autoBaseUnitStep, ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (rangeOptions) {\n                var options = rangeOptions || this.options;\n                var categories = options.categories;\n                var autoUnit = options.baseUnit === FIT;\n                var baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var stepOptions = {\n                    baseUnit: baseUnit,\n                    baseUnitStep: baseUnitStep,\n                    weekStartDay: options.weekStartDay\n                };\n                var categoryLimits = this._categoryRange(categories);\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var categoryLimits = this._categoryRange(options.categories);\n                var span = toDate(options.max || categoryLimits.max) - toDate(options.min || categoryLimits.min);\n                var maxDateGroups = options.maxDateGroups || this.options.maxDateGroups;\n                var autoUnit = options.baseUnit === FIT;\n                var autoUnitIx = 0;\n                var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n                var units = span / TIME_PER_UNIT[baseUnit];\n                var totalUnits = units;\n                var autoBaseUnitSteps = deepExtend({}, this.options.autoBaseUnitSteps, options.autoBaseUnitSteps);\n                var unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = Math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = Math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            groupCategories: function (options) {\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var maxCategory = toDate(sparseArrayLimits(categories).max);\n                var ref = this.range(options);\n                var min = ref.min;\n                var max = ref.max;\n                var groups = [];\n                var nextDate;\n                for (var date = min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, axisOptions, upper, roundToNext) {\n                var options = axisOptions || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                }\n                return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var date = options.categories[index];\n                var baseUnit = options.baseUnit;\n                var unitFormat = labelOptions.dateFormats[baseUnit];\n                var visible = true;\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = Math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var start = a;\n                var end = b;\n                if (typeof start === OBJECT) {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === OBJECT) {\n                    end = this.categoryIndex(end);\n                }\n                return CategoryAxis.fn.getSlot.call(this, start, end, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            }\n        });\n        setDefaultOptions(DateCategoryAxis, {\n            type: DATE,\n            labels: { dateFormats: DateLabelFormats },\n            autoBaseUnitSteps: {\n                milliseconds: [\n                    1,\n                    10,\n                    100\n                ],\n                seconds: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                minutes: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                hours: [\n                    1,\n                    2,\n                    3\n                ],\n                days: [\n                    1,\n                    2,\n                    3\n                ],\n                weeks: [\n                    1,\n                    2\n                ],\n                months: [\n                    1,\n                    2,\n                    3,\n                    6\n                ],\n                years: [\n                    1,\n                    2,\n                    3,\n                    5,\n                    10,\n                    25,\n                    50\n                ]\n            },\n            maxDateGroups: 10\n        });\n        function autoMajorUnit(min, max) {\n            var diff = round(max - min, DEFAULT_PRECISION - 1);\n            if (diff === 0) {\n                if (max === 0) {\n                    return 0.1;\n                }\n                diff = Math.abs(max);\n            }\n            var scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n            var relativeValue = round(diff / scale, DEFAULT_PRECISION);\n            var scaleMultiplier = 1;\n            if (relativeValue < 1.904762) {\n                scaleMultiplier = 0.2;\n            } else if (relativeValue < 4.761904) {\n                scaleMultiplier = 0.5;\n            } else if (relativeValue < 9.523809) {\n                scaleMultiplier = 1;\n            } else {\n                scaleMultiplier = 2;\n            }\n            return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n        }\n        function autoAxisMin(min, max, narrow) {\n            if (!min && !max) {\n                return 0;\n            }\n            var axisMin;\n            if (min >= 0 && max >= 0) {\n                var minValue = min === max ? 0 : min;\n                var diff = (max - minValue) / max;\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMin = Math.max(0, minValue - (max - minValue) / 2);\n            } else {\n                axisMin = min;\n            }\n            return axisMin;\n        }\n        function autoAxisMax(min, max, narrow) {\n            if (!min && !max) {\n                return 1;\n            }\n            var axisMax;\n            if (min <= 0 && max <= 0) {\n                var maxValue = min === max ? 0 : max;\n                var diff = Math.abs((maxValue - min) / maxValue);\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMax = Math.min(0, maxValue - (min - maxValue) / 2);\n            } else {\n                axisMax = max;\n            }\n            return axisMax;\n        }\n        function floor(value, step) {\n            return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n        }\n        function ceil(value, step) {\n            return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n        }\n        function limitCoordinate(value) {\n            return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n        }\n        var MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n        var NumericAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var autoOptions = autoAxisOptions(seriesMin, seriesMax, options);\n                var totalOptions = totalAxisOptions(autoOptions, options);\n                Axis.fn.init.call(this, axisOptions(autoOptions, options), chartService);\n                this.totalMin = totalOptions.min;\n                this.totalMax = totalOptions.max;\n                this.totalMajorUnit = totalOptions.majorUnit;\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n            },\n            startValue: function () {\n                return 0;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                if (stepValue === 0) {\n                    return 1;\n                }\n                var options = this.options;\n                var range = options.max - options.min;\n                return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n            },\n            getTickPositions: function (unit, skipUnit) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var range = options.max - options.min;\n                var scale = lineSize / range;\n                var step = unit * scale;\n                var divisions = this.getDivisions(unit);\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var positions = [];\n                var pos = lineBox[(vertical ? Y : X) + startEdge];\n                var skipStep = 0;\n                if (skipUnit) {\n                    skipStep = skipUnit / unit;\n                }\n                for (var idx = 0; idx < divisions; idx++) {\n                    if (idx % skipStep !== 0) {\n                        positions.push(round(pos, COORD_PRECISION));\n                    }\n                    pos = pos + step * dir;\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                if (limit === void 0) {\n                    limit = false;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (options.max - options.min));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 0;\n                }\n                if (!defined(end)) {\n                    end = start || 0;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                var p1, p2;\n                if (vertical) {\n                    p1 = options.max - Math.max(start, end);\n                    p2 = options.max - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - options.min;\n                    p2 = Math.max(start, end) - options.min;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = Number(options.max);\n                var min = Number(options.min);\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var offset = dir * (point[valueAxis] - lineStart);\n                var step = (max - min) / lineSize;\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = vertical ? max - valueOffset : min + valueOffset;\n                return round(value, DEFAULT_PRECISION);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = options.max;\n                var min = options.min;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = max - min;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: min + offset,\n                    max: max + offset\n                };\n            },\n            scaleRange: function (delta) {\n                var options = this.options;\n                var offset = -delta * options.majorUnit;\n                return {\n                    min: options.min - offset,\n                    max: options.max + offset\n                };\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            isValidRange: function (min, max) {\n                return max - min > MIN_VALUE_RANGE;\n            }\n        });\n        function autoAxisOptions(seriesMin, seriesMax, options) {\n            var narrowRange = options.narrowRange;\n            var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n            var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n            var majorUnit = autoMajorUnit(autoMin, autoMax);\n            var autoOptions = { majorUnit: majorUnit };\n            if (options.roundToMajorUnit !== false) {\n                if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n                    autoMin -= majorUnit;\n                }\n                if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n                    autoMax += majorUnit;\n                }\n            }\n            autoOptions.min = floor(autoMin, majorUnit);\n            autoOptions.max = ceil(autoMax, majorUnit);\n            return autoOptions;\n        }\n        function totalAxisOptions(autoOptions, options) {\n            return {\n                min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n                max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n                majorUnit: autoOptions.majorUnit\n            };\n        }\n        function axisOptions(autoOptions, userOptions) {\n            var options = userOptions;\n            var userSetMin, userSetMax;\n            if (userOptions) {\n                userSetMin = defined(userOptions.min);\n                userSetMax = defined(userOptions.max);\n                var userSetLimits = userSetMin || userSetMax;\n                if (userSetLimits) {\n                    if (userOptions.min === userOptions.max) {\n                        if (userOptions.min > 0) {\n                            userOptions.min = 0;\n                        } else {\n                            userOptions.max = 1;\n                        }\n                    }\n                }\n                if (userOptions.majorUnit) {\n                    autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n                    autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n                } else if (userSetLimits) {\n                    options = deepExtend(autoOptions, userOptions);\n                    autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n                }\n            }\n            autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n            var result = deepExtend(autoOptions, options);\n            if (result.min >= result.max) {\n                if (userSetMin && !userSetMax) {\n                    result.max = result.min + result.majorUnit;\n                } else if (!userSetMin && userSetMax) {\n                    result.min = result.max - result.majorUnit;\n                }\n            }\n            return result;\n        }\n        function remainderClose(value, divisor, ratio) {\n            var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n            var threshold = divisor * (1 - ratio);\n            return remainder === 0 || remainder > threshold;\n        }\n        setDefaultOptions(NumericAxis, {\n            type: 'numeric',\n            min: 0,\n            max: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { format: '#.####################' },\n            zIndex: 1\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, axisOptions, chartService) {\n                var min = toDate(seriesMin);\n                var max = toDate(seriesMax);\n                var intlService = chartService.intl;\n                var options = axisOptions || {};\n                options = deepExtend(options || {}, {\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = applyDefaults(min, max, options);\n                Axis.fn.init.call(this, options, chartService);\n                this.seriesMin = min;\n                this.seriesMax = max;\n                this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit));\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return Math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.prototype.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.prototype.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            translateRange: function (delta, exact) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / dateDiff(range.max, range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(options.min, offset);\n                var to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var ref = this.options;\n                var from = ref.min;\n                var to = ref.max;\n                var rounds = Math.abs(delta);\n                while (rounds--) {\n                    var range = dateDiff(from, to);\n                    var step = Math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        function timeUnits(delta) {\n            var unit = HOURS;\n            if (delta >= TIME_PER_YEAR) {\n                unit = YEARS;\n            } else if (delta >= TIME_PER_MONTH) {\n                unit = MONTHS;\n            } else if (delta >= TIME_PER_WEEK) {\n                unit = WEEKS;\n            } else if (delta >= TIME_PER_DAY) {\n                unit = DAYS;\n            }\n            return unit;\n        }\n        function applyDefaults(seriesMin, seriesMax, options) {\n            var min = options.min || seriesMin;\n            var max = options.max || seriesMax;\n            var baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n            var baseUnitTime = TIME_PER_UNIT[baseUnit];\n            var autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max);\n            var autoMax = ceilDate(toTime(max) + 1, baseUnit);\n            var userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n            var majorUnit = userMajorUnit || ceil(autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime;\n            var actualUnits = duration(autoMin, autoMax, baseUnit);\n            var totalUnits = ceil(actualUnits, majorUnit);\n            var unitsToAdd = totalUnits - actualUnits;\n            var head = Math.floor(unitsToAdd / 2);\n            var tail = unitsToAdd - head;\n            if (!options.baseUnit) {\n                delete options.baseUnit;\n            }\n            options.baseUnit = options.baseUnit || baseUnit;\n            options.min = options.min || addDuration(autoMin, -head, baseUnit);\n            options.max = options.max || addDuration(autoMax, tail, baseUnit);\n            options.minorUnit = options.minorUnit || majorUnit / 5;\n            options.majorUnit = majorUnit;\n            return options;\n        }\n        setDefaultOptions(DateValueAxis, {\n            type: DATE,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { dateFormats: DateLabelFormats }\n        });\n        var DEFAULT_MAJOR_UNIT = 10;\n        var LogarithmicAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var axisOptions = deepExtend({\n                    majorUnit: DEFAULT_MAJOR_UNIT,\n                    min: seriesMin,\n                    max: seriesMax\n                }, options);\n                var base = axisOptions.majorUnit;\n                var autoMax = autoAxisMax$1(seriesMax, base);\n                var autoMin = autoAxisMin$1(seriesMin, seriesMax, axisOptions);\n                var range = initRange(autoMin, autoMax, axisOptions, options);\n                axisOptions.max = range.max;\n                axisOptions.min = range.min;\n                axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n                Axis.fn.init.call(this, axisOptions, chartService);\n                this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n                this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n                this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n                this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n                this.createLabels();\n            },\n            startValue: function () {\n                return this.options.min;\n            },\n            getSlot: function (a, b, limit) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (logMax - logMin));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 1;\n                }\n                if (!defined(end)) {\n                    end = start || 1;\n                }\n                if (start <= 0 || end <= 0) {\n                    return null;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                start = log(start, base);\n                end = log(end, base);\n                var p1, p2;\n                if (vertical) {\n                    p1 = logMax - Math.max(start, end);\n                    p2 = logMax - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - logMin;\n                    p2 = Math.max(start, end) - logMin;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = (logMax - logMin) / lineSize;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = lineBox[valueAxis + startEdge];\n                var offset = dir * (point[valueAxis] - lineStart);\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = logMin + valueOffset;\n                return round(Math.pow(base, value), DEFAULT_PRECISION);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            scaleRange: function (delta) {\n                var base = this.options.majorUnit;\n                var offset = -delta;\n                return {\n                    min: Math.pow(base, this.logMin - offset),\n                    max: Math.pow(base, this.logMax + offset)\n                };\n            },\n            translateRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (logMax - logMin);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: Math.pow(base, logMin + offset),\n                    max: Math.pow(base, logMax + offset)\n                };\n            },\n            labelsCount: function () {\n                var floorMax = Math.floor(this.logMax);\n                var count = Math.floor(floorMax - this.logMin) + 1;\n                return count;\n            },\n            getMajorTickPositions: function () {\n                var ticks = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    ticks.push(position);\n                }, {\n                    step: 1,\n                    skip: 0\n                });\n                return ticks;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var majorTicks = options.majorTicks;\n                var minorTicks = options.minorTicks;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var lineBox = this.lineBox();\n                var ticks = [];\n                var tickLineOptions = { vertical: vertical };\n                function render(tickPosition, tickOptions) {\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPosition;\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n                if (majorTicks.visible) {\n                    this.traverseMajorTicksPositions(render, majorTicks);\n                }\n                if (minorTicks.visible) {\n                    this.traverseMinorTicksPositions(render, minorTicks);\n                }\n                return ticks;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var vertical = options.vertical;\n                var lineBox = altAxis.lineBox();\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPosition, gridLine) {\n                    if (!inArray(tickPosition, majorTicks)) {\n                        lineOptions.position = tickPosition;\n                        container.append(createAxisGridLine(lineOptions, gridLine));\n                        majorTicks.push(tickPosition);\n                    }\n                }\n                if (majorGridLines.visible) {\n                    this.traverseMajorTicksPositions(render, majorGridLines);\n                }\n                if (minorGridLines.visible) {\n                    this.traverseMinorTicksPositions(render, minorGridLines);\n                }\n                return container.children;\n            },\n            traverseMajorTicksPositions: function (callback, tickOptions) {\n                var ref = this._lineOptions();\n                var lineStart = ref.lineStart;\n                var step = ref.step;\n                var ref$1 = this;\n                var logMin = ref$1.logMin;\n                var logMax = ref$1.logMax;\n                for (var power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n                    var position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            },\n            traverseMinorTicksPositions: function (callback, tickOptions) {\n                var this$1 = this;\n                var ref = this.options;\n                var min = ref.min;\n                var max = ref.max;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var ref$1 = this._lineOptions();\n                var lineStart = ref$1.lineStart;\n                var step = ref$1.step;\n                var ref$2 = this;\n                var logMin = ref$2.logMin;\n                var logMax = ref$2.logMax;\n                var start = Math.floor(logMin);\n                for (var power = start; power < logMax; power++) {\n                    var minorOptions = this$1._minorIntervalOptions(power);\n                    for (var idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                        var value = minorOptions.value + idx * minorOptions.minorStep;\n                        if (value > max) {\n                            break;\n                        }\n                        if (value >= min) {\n                            var position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                            callback(position, tickOptions);\n                        }\n                    }\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var power = Math.ceil(this.logMin + index);\n                var value = Math.pow(this.options.majorUnit, power);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, -delta);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                var base = options.majorUnit;\n                var acceptOptionsRange = max > min && options.min && options.max && round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1;\n                var acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n                if (acceptOptionsRange || acceptNewRange) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            _minorIntervalOptions: function (power) {\n                var ref = this.options;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var value = Math.pow(base, power);\n                var nextValue = Math.pow(base, power + 1);\n                var difference = nextValue - value;\n                var minorStep = difference / minorUnit;\n                return {\n                    value: value,\n                    minorStep: minorStep\n                };\n            },\n            _lineOptions: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = dir * (lineSize / (this.logMax - this.logMin));\n                var lineStart = lineBox[valueAxis + startEdge];\n                return {\n                    step: step,\n                    lineStart: lineStart,\n                    lineBox: lineBox\n                };\n            }\n        });\n        function initRange(autoMin, autoMax, axisOptions, options) {\n            var min = axisOptions.min;\n            var max = axisOptions.max;\n            if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.max)) {\n                max = autoMax;\n            } else if (options.max <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.min)) {\n                min = autoMin;\n            } else if (options.min <= 0) {\n                throwNegativeValuesError();\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function autoAxisMin$1(min, max, options) {\n            var base = options.majorUnit;\n            var autoMin = min;\n            if (min <= 0) {\n                autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n            } else if (!options.narrowRange) {\n                autoMin = Math.pow(base, Math.floor(log(min, base)));\n            }\n            return autoMin;\n        }\n        function autoAxisMax$1(max, base) {\n            var logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n            var autoMax;\n            if (max <= 0) {\n                autoMax = base;\n            } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n                autoMax = Math.pow(base, log(max, base) + 0.2);\n            } else {\n                autoMax = Math.pow(base, Math.ceil(log(max, base)));\n            }\n            return autoMax;\n        }\n        function throwNegativeValuesError() {\n            throw new Error('Non positive values cannot be used for a logarithmic axis');\n        }\n        function log(y, x) {\n            return Math.log(y) / Math.log(x);\n        }\n        setDefaultOptions(LogarithmicAxis, {\n            type: 'log',\n            majorUnit: DEFAULT_MAJOR_UNIT,\n            minorUnit: 1,\n            axisCrossingValue: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            zIndex: 1,\n            _deferLabels: true\n        });\n        var GridLinesMixin = {\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n                var gridLines = [];\n                var skipMajor = false;\n                var majorAngles, minorAngles;\n                if (options.majorGridLines.visible) {\n                    majorAngles = this.majorGridLineAngles(altAxis);\n                    skipMajor = true;\n                    gridLines = this.renderMajorGridLines(majorAngles, radius, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n                    append(gridLines, this.renderMinorGridLines(minorAngles, radius, options.minorGridLines, altAxis, skipMajor));\n                }\n                return gridLines;\n            },\n            renderMajorGridLines: function (angles, radius, options) {\n                return this.renderGridLines(angles, radius, options);\n            },\n            renderMinorGridLines: function (angles, radius, options, altAxis, skipMajor) {\n                var radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n                return this.renderGridLines(angles, radius, options, radiusCallback);\n            },\n            renderGridLines: function (angles, radius, options, radiusCallback) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var center = this.box.center();\n                var circle = new Circle([\n                    center.x,\n                    center.y\n                ], radius);\n                var container = this.gridLinesVisual();\n                for (var i = 0; i < angles.length; i++) {\n                    var line = new Path(style);\n                    if (radiusCallback) {\n                        circle.radius = radiusCallback(angles[i]);\n                    }\n                    line.moveTo(circle.center).lineTo(circle.pointAt(angles[i] + 180));\n                    container.append(line);\n                }\n                return container.children;\n            },\n            gridLineAngles: function (altAxis, size, skip, step, skipAngles) {\n                var this$1 = this;\n                var divs = this.intervals(size, skip, step, skipAngles);\n                var options = altAxis.options;\n                var altAxisVisible = options.visible && (options.line || {}).visible !== false;\n                return map(divs, function (d) {\n                    var alpha = this$1.intervalAngle(d);\n                    if (!altAxisVisible || alpha !== 90) {\n                        return alpha;\n                    }\n                });\n            }\n        };\n        var RadarCategoryAxis = CategoryAxis.extend({\n            range: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var options = this.options;\n                var categories = options.categories.length;\n                var divCount = categories / size || 1;\n                var divAngle = 360 / divCount;\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                var divs = [];\n                var angle = 0;\n                for (var i = skip; i < divCount; i += step) {\n                    if (options.reverse) {\n                        angle = 360 - i * divAngle;\n                    } else {\n                        angle = i * divAngle;\n                    }\n                    angle = round(angle, COORD_PRECISION) % 360;\n                    if (!(skipAngles && inArray(angle, skipAngles))) {\n                        divs.push(angle);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(1);\n            },\n            minorIntervals: function () {\n                return this.intervals(0.5);\n            },\n            intervalAngle: function (interval) {\n                return (360 + interval + this.options.startAngle) % 360;\n            },\n            majorAngles: function () {\n                var this$1 = this;\n                return map(this.majorIntervals(), function (interval) {\n                    return this$1.intervalAngle(interval);\n                });\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var ref = this.options;\n                var minorGridLines = ref.minorGridLines;\n                var majorGridLines = ref.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            radiusCallback: function (radius, altAxis, skipMajor) {\n                if (altAxis.options.type !== ARC) {\n                    var minorAngle = rad(360 / (this.options.categories.length * 2));\n                    var minorRadius = Math.cos(minorAngle) * radius;\n                    var majorAngles = this.majorAngles();\n                    var radiusCallback = function (angle) {\n                        if (!skipMajor && inArray(angle, majorAngles)) {\n                            return radius;\n                        }\n                        return minorRadius;\n                    };\n                    return radiusCallback;\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var plotBands = this.options.plotBands || [];\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var slot = this$1.plotBandSlot(band);\n                    var singleSlot = this$1.getSlot(band.from);\n                    var head = band.from - Math.floor(band.from);\n                    slot.startAngle += head * singleSlot.angle;\n                    var tail = Math.ceil(band.to) - band.to;\n                    slot.angle -= (tail + head) * singleSlot.angle;\n                    var ring = ShapeBuilder.current.createRing(slot, {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    });\n                    group.append(ring);\n                }\n                this.appendVisual(group);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to - 1);\n            },\n            getSlot: function (from, to) {\n                var options = this.options;\n                var justified = options.justified;\n                var box = this.box;\n                var divs = this.majorAngles();\n                var totalDivs = divs.length;\n                var slotAngle = 360 / totalDivs;\n                var fromValue = from;\n                if (options.reverse && !justified) {\n                    fromValue = (fromValue + 1) % totalDivs;\n                }\n                fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n                var slotStart = divs[fromValue];\n                if (justified) {\n                    slotStart = slotStart - slotAngle / 2;\n                    if (slotStart < 0) {\n                        slotStart += 360;\n                    }\n                }\n                var toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n                var slots = toValue - fromValue + 1;\n                var angle = slotAngle * slots;\n                return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n            },\n            slot: function (from, to) {\n                var slot = this.getSlot(from, to);\n                var startAngle = slot.startAngle + 180;\n                var endAngle = startAngle + slot.angle;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            pointCategoryIndex: function (point) {\n                var this$1 = this;\n                var length = this.options.categories.length;\n                var index = null;\n                for (var i = 0; i < length; i++) {\n                    var slot = this$1.getSlot(i);\n                    if (slot.containsPoint(point)) {\n                        index = i;\n                        break;\n                    }\n                }\n                return index;\n            }\n        });\n        setDefaultOptions(RadarCategoryAxis, {\n            startAngle: 90,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: { visible: true },\n            justified: true\n        });\n        deepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n        var PolarAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                var instanceOptions = this.options;\n                instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n            },\n            getDivisions: function (stepValue) {\n                return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                var divs = this.intervals(options.majorUnit, skip, step);\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var min = this.options.min;\n                var divisions = this.getDivisions(size);\n                var divs = [];\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                for (var i = skip; i < divisions; i += step) {\n                    var current = (360 + min + i * size) % 360;\n                    if (!(skipAngles && inArray(current, skipAngles))) {\n                        divs.push(current);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(this.options.majorUnit);\n            },\n            minorIntervals: function () {\n                return this.intervals(this.options.minorUnit);\n            },\n            intervalAngle: function (i) {\n                return (540 - i - this.options.startAngle) % 360;\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to);\n            },\n            getSlot: function (a, b) {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var startAngle = options.startAngle;\n                var start = limitValue(a, options.min, options.max);\n                var end = limitValue(b || start, start, options.max);\n                if (options.reverse) {\n                    start *= -1;\n                    end *= -1;\n                }\n                start = (540 - start - startAngle) % 360;\n                end = (540 - end - startAngle) % 360;\n                if (end < start) {\n                    var tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n            },\n            slot: function (from, to) {\n                if (to === void 0) {\n                    to = from;\n                }\n                var options = this.options;\n                var start = 360 - options.startAngle;\n                var slot = this.getSlot(from, to);\n                var min = Math.min(from, to);\n                var max = Math.max(from, to);\n                var startAngle, endAngle;\n                if (options.reverse) {\n                    startAngle = min;\n                    endAngle = max;\n                } else {\n                    startAngle = 360 - max;\n                    endAngle = 360 - min;\n                }\n                startAngle = (startAngle + start) % 360;\n                endAngle = (endAngle + start) % 360;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var center = this.box.center();\n                var dx = point.x - center.x;\n                var dy = point.y - center.y;\n                var theta = Math.round(deg(Math.atan2(dy, dx)));\n                var start = options.startAngle;\n                if (!options.reverse) {\n                    theta *= -1;\n                    start *= -1;\n                }\n                return (theta + start + 360) % 360;\n            },\n            valueRange: function () {\n                return {\n                    min: 0,\n                    max: Math.PI * 2\n                };\n            }\n        });\n        setDefaultOptions(PolarAxis, {\n            type: 'polar',\n            startAngle: 0,\n            reverse: false,\n            majorUnit: 60,\n            min: 0,\n            max: 360,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: {\n                color: BLACK,\n                visible: true,\n                width: 1\n            },\n            minorGridLines: { color: '#aaa' }\n        });\n        deepExtend(PolarAxis.prototype, GridLinesMixin, {\n            createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n            majorAngles: RadarCategoryAxis.prototype.majorAngles,\n            range: NumericAxis.prototype.range,\n            labelsCount: NumericAxis.prototype.labelsCount,\n            createAxisLabel: NumericAxis.prototype.createAxisLabel\n        });\n        var RadarNumericAxisMixin = {\n            options: { majorGridLines: { visible: true } },\n            createPlotBands: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var type = ref.majorGridLines.type;\n                var plotBands = ref.plotBands;\n                if (plotBands === void 0) {\n                    plotBands = [];\n                }\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var bandStyle = {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    };\n                    var slot = this$1.getSlot(band.from, band.to, true);\n                    var ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n                    var shape = void 0;\n                    if (type === ARC) {\n                        shape = ShapeBuilder.current.createRing(ring, bandStyle);\n                    } else {\n                        shape = Path.fromPoints(this$1.plotBandPoints(ring, majorAngles), bandStyle).close();\n                    }\n                    group.append(shape);\n                }\n                this.appendVisual(group);\n            },\n            plotBandPoints: function (ring, angles) {\n                var innerPoints = [];\n                var outerPoints = [];\n                var center = [\n                    ring.center.x,\n                    ring.center.y\n                ];\n                var innerCircle = new Circle(center, ring.innerRadius);\n                var outerCircle = new Circle(center, ring.radius);\n                for (var i = 0; i < angles.length; i++) {\n                    innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n                    outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n                }\n                innerPoints.reverse();\n                innerPoints.push(innerPoints[0]);\n                outerPoints.push(outerPoints[0]);\n                return outerPoints.concat(innerPoints);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var majorTicks = this.radarMajorGridLinePositions();\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var gridLines = [];\n                if (options.majorGridLines.visible) {\n                    gridLines = this.renderGridLines(center, majorTicks, majorAngles, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    var minorTicks = this.radarMinorGridLinePositions();\n                    append(gridLines, this.renderGridLines(center, minorTicks, majorAngles, options.minorGridLines));\n                }\n                return gridLines;\n            },\n            renderGridLines: function (center, ticks, angles, options) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var skip = options.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = options.step;\n                if (step === void 0) {\n                    step = 0;\n                }\n                var container = this.gridLinesVisual();\n                for (var tickIx = skip; tickIx < ticks.length; tickIx += step) {\n                    var tickRadius = center.y - ticks[tickIx];\n                    if (tickRadius > 0) {\n                        var circle = new Circle([\n                            center.x,\n                            center.y\n                        ], tickRadius);\n                        if (options.type === ARC) {\n                            container.append(new drawing.Circle(circle, style));\n                        } else {\n                            var line = new Path(style);\n                            for (var angleIx = 0; angleIx < angles.length; angleIx++) {\n                                line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                            }\n                            line.close();\n                            container.append(line);\n                        }\n                    }\n                }\n                return container.children;\n            },\n            getValue: function (point) {\n                var lineBox = this.lineBox();\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var radius = point.distanceTo(center);\n                var distance = radius;\n                if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n                    var dx = point.x - center.x;\n                    var dy = point.y - center.y;\n                    var theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n                    majorAngles.sort(function (a, b) {\n                        return angularDistance(a, theta) - angularDistance(b, theta);\n                    });\n                    var midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n                    var alpha = angularDistance(theta, majorAngles[0]);\n                    var gamma = 90 - midAngle;\n                    var beta = 180 - alpha - gamma;\n                    distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n                }\n                return this.axisType().prototype.getValue.call(this, new Point(lineBox.x1, lineBox.y2 - distance));\n            }\n        };\n        function angularDistance(a, b) {\n            return 180 - Math.abs(Math.abs(a - b) - 180);\n        }\n        var RadarNumericAxis = NumericAxis.extend({\n            radarMajorGridLinePositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            radarMinorGridLinePositions: function () {\n                var options = this.options;\n                var minorSkipStep = 0;\n                if (options.majorGridLines.visible) {\n                    minorSkipStep = options.majorUnit;\n                }\n                return this.getTickPositions(options.minorUnit, minorSkipStep);\n            },\n            axisType: function () {\n                return NumericAxis;\n            }\n        });\n        deepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n        var RadarLogarithmicAxis = LogarithmicAxis.extend({\n            radarMajorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.majorGridLines);\n                return positions;\n            },\n            radarMinorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMinorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.minorGridLines);\n                return positions;\n            },\n            axisType: function () {\n                return LogarithmicAxis;\n            }\n        });\n        deepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n        var WEIGHT = 0.333;\n        var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n        var CurveProcessor = Class.extend({\n            init: function (closed) {\n                this.closed = closed;\n            },\n            process: function (dataPoints) {\n                var this$1 = this;\n                var points = dataPoints.slice(0);\n                var segments = [];\n                var closed = this.closed;\n                var length = points.length;\n                if (length > 2) {\n                    this.removeDuplicates(0, points);\n                    length = points.length;\n                }\n                if (length < 2 || length === 2 && points[0].equals(points[1])) {\n                    return segments;\n                }\n                var p0 = points[0];\n                var p1 = points[1];\n                var p2 = points[2];\n                segments.push(new Segment(p0));\n                while (p0.equals(points[length - 1])) {\n                    closed = true;\n                    points.pop();\n                    length--;\n                }\n                if (length === 2) {\n                    var tangent = this.tangent(p0, p1, X, Y);\n                    last(segments).controlOut(this.firstControlPoint(tangent, p0, p1, X, Y));\n                    segments.push(new Segment(p1, this.secondControlPoint(tangent, p0, p1, X, Y)));\n                    return segments;\n                }\n                var initialControlPoint, lastControlPoint;\n                if (closed) {\n                    p0 = points[length - 1];\n                    p1 = points[0];\n                    p2 = points[1];\n                    var controlPoints = this.controlPoints(p0, p1, p2);\n                    initialControlPoint = controlPoints[1];\n                    lastControlPoint = controlPoints[0];\n                } else {\n                    var tangent$1 = this.tangent(p0, p1, X, Y);\n                    initialControlPoint = this.firstControlPoint(tangent$1, p0, p1, X, Y);\n                }\n                var cp0 = initialControlPoint;\n                for (var idx = 0; idx <= length - 3; idx++) {\n                    this$1.removeDuplicates(idx, points);\n                    length = points.length;\n                    if (idx + 3 <= length) {\n                        p0 = points[idx];\n                        p1 = points[idx + 1];\n                        p2 = points[idx + 2];\n                        var controlPoints$1 = this$1.controlPoints(p0, p1, p2);\n                        last(segments).controlOut(cp0);\n                        cp0 = controlPoints$1[1];\n                        var cp1 = controlPoints$1[0];\n                        segments.push(new Segment(p1, cp1));\n                    }\n                }\n                if (closed) {\n                    p0 = points[length - 2];\n                    p1 = points[length - 1];\n                    p2 = points[0];\n                    var controlPoints$2 = this.controlPoints(p0, p1, p2);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p1, controlPoints$2[0]));\n                    last(segments).controlOut(controlPoints$2[1]);\n                    segments.push(new Segment(p2, lastControlPoint));\n                } else {\n                    var tangent$2 = this.tangent(p1, p2, X, Y);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p2, this.secondControlPoint(tangent$2, p1, p2, X, Y)));\n                }\n                return segments;\n            },\n            removeDuplicates: function (idx, points) {\n                while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n                    points.splice(idx + 1, 1);\n                }\n            },\n            invertAxis: function (p0, p1, p2) {\n                var invertAxis = false;\n                if (p0.x === p1.x) {\n                    invertAxis = true;\n                } else if (p1.x === p2.x) {\n                    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {\n                        invertAxis = true;\n                    }\n                } else {\n                    var fn = this.lineFunction(p0, p1);\n                    var y2 = this.calculateFunction(fn, p2.x);\n                    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {\n                        invertAxis = true;\n                    }\n                }\n                return invertAxis;\n            },\n            isLine: function (p0, p1, p2) {\n                var fn = this.lineFunction(p0, p1);\n                var y2 = this.calculateFunction(fn, p2.x);\n                return p0.x === p1.x && p1.x === p2.x || round(y2, 1) === round(p2.y, 1);\n            },\n            lineFunction: function (p1, p2) {\n                var a = (p2.y - p1.y) / (p2.x - p1.x);\n                var b = p1.y - a * p1.x;\n                return [\n                    b,\n                    a\n                ];\n            },\n            controlPoints: function (p0, p1, p2) {\n                var xField = X;\n                var yField = Y;\n                var restrict = false;\n                var switchOrientation = false;\n                var tangent;\n                if (this.isLine(p0, p1, p2)) {\n                    tangent = this.tangent(p0, p1, X, Y);\n                } else {\n                    var monotonic = {\n                        x: this.isMonotonicByField(p0, p1, p2, X),\n                        y: this.isMonotonicByField(p0, p1, p2, Y)\n                    };\n                    if (monotonic.x && monotonic.y) {\n                        tangent = this.tangent(p0, p2, X, Y);\n                        restrict = true;\n                    } else {\n                        if (this.invertAxis(p0, p1, p2)) {\n                            xField = Y;\n                            yField = X;\n                        }\n                        if (monotonic[xField]) {\n                            tangent = 0;\n                        } else {\n                            var sign;\n                            if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {\n                                sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                            } else {\n                                sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                            }\n                            tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                            switchOrientation = true;\n                        }\n                    }\n                }\n                var secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n                if (switchOrientation) {\n                    var oldXField = xField;\n                    xField = yField;\n                    yField = oldXField;\n                }\n                var firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n                if (restrict) {\n                    this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n                    this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n                }\n                return [\n                    secondControlPoint,\n                    firstControlPoint\n                ];\n            },\n            restrictControlPoint: function (p1, p2, cp, tangent) {\n                if (p1.y < p2.y) {\n                    if (p2.y < cp.y) {\n                        cp.x = p1.x + (p2.y - p1.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (cp.y < p1.y) {\n                        cp.x = p2.x - (p2.y - p1.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                } else {\n                    if (cp.y < p2.y) {\n                        cp.x = p1.x - (p1.y - p2.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (p1.y < cp.y) {\n                        cp.x = p2.x + (p1.y - p2.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                }\n            },\n            tangent: function (p0, p1, xField, yField) {\n                var x = p1[xField] - p0[xField];\n                var y = p1[yField] - p0[yField];\n                var tangent;\n                if (x === 0) {\n                    tangent = 0;\n                } else {\n                    tangent = y / x;\n                }\n                return tangent;\n            },\n            isMonotonicByField: function (p0, p1, p2, field) {\n                return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];\n            },\n            firstControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n            },\n            secondControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n            },\n            point: function (xValue, yValue, xField, yField) {\n                var controlPoint = new geometry.Point();\n                controlPoint[xField] = xValue;\n                controlPoint[yField] = yValue;\n                return controlPoint;\n            },\n            calculateFunction: function (fn, x) {\n                var length = fn.length;\n                var result = 0;\n                for (var i = 0; i < length; i++) {\n                    result += Math.pow(x, i) * fn[i];\n                }\n                return result;\n            }\n        });\n        function numberSign(value) {\n            return value <= 0 ? -1 : 1;\n        }\n        dataviz.Gradients = GRADIENTS;\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            services: services,\n            autoMajorUnit: autoMajorUnit,\n            Point: Point,\n            Box: Box,\n            Ring: Ring,\n            Sector: Sector,\n            ShapeBuilder: ShapeBuilder,\n            ShapeElement: ShapeElement,\n            ChartElement: ChartElement,\n            BoxElement: BoxElement,\n            RootElement: RootElement,\n            FloatElement: FloatElement,\n            Text: Text,\n            TextBox: TextBox,\n            Title: Title,\n            AxisLabel: AxisLabel,\n            Axis: Axis,\n            Note: Note,\n            CategoryAxis: CategoryAxis,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            NumericAxis: NumericAxis,\n            LogarithmicAxis: LogarithmicAxis,\n            PolarAxis: PolarAxis,\n            RadarCategoryAxis: RadarCategoryAxis,\n            RadarNumericAxis: RadarNumericAxis,\n            RadarLogarithmicAxis: RadarLogarithmicAxis,\n            CurveProcessor: CurveProcessor,\n            rectToBox: rectToBox,\n            addClass: addClass,\n            removeClass: removeClass,\n            alignPathToPixel: alignPathToPixel,\n            clockwise: clockwise,\n            convertableToNumber: convertableToNumber,\n            deepExtend: deepExtend,\n            elementStyles: elementStyles,\n            getSpacing: getSpacing,\n            getTemplate: getTemplate,\n            getter: __common_getter_js,\n            grep: grep,\n            hasClasses: hasClasses,\n            inArray: inArray,\n            interpolateValue: interpolateValue,\n            InstanceObserver: InstanceObserver,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            isObject: isObject,\n            isString: isString,\n            map: map,\n            mousewheelDelta: mousewheelDelta,\n            FontLoader: FontLoader,\n            setDefaultOptions: setDefaultOptions,\n            sparseArrayLimits: sparseArrayLimits,\n            styleValue: styleValue,\n            append: append,\n            bindEvents: bindEvents,\n            Class: Class,\n            defined: defined,\n            deg: deg,\n            elementOffset: elementOffset,\n            elementSize: elementSize,\n            eventElement: eventElement,\n            eventCoordinates: eventCoordinates,\n            last: last,\n            limitValue: limitValue,\n            logToConsole: kendo.logToConsole,\n            objectKey: objectKey,\n            rad: rad,\n            round: round,\n            unbindEvents: unbindEvents,\n            valueOrDefault: valueOrDefault,\n            absoluteDateDiff: absoluteDateDiff,\n            addDuration: addDuration,\n            addTicks: addTicks,\n            ceilDate: ceilDate,\n            dateComparer: dateComparer,\n            dateDiff: dateDiff,\n            dateEquals: dateEquals,\n            dateIndex: dateIndex,\n            duration: duration,\n            floorDate: floorDate,\n            lteDateIndex: lteDateIndex,\n            startOfWeek: startOfWeek,\n            toDate: toDate,\n            parseDate: parseDate,\n            parseDates: parseDates,\n            toTime: toTime\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/core', ['dataviz/core/kendo-core'], f);\n}(function () {\n    (function ($) {\n        var dataviz = kendo.dataviz;\n        var services = dataviz.services;\n        var draw = kendo.drawing;\n        dataviz.ExportMixin = {\n            extend: function (proto, skipLegacy) {\n                if (!proto.exportVisual) {\n                    throw new Error('Mixin target has no exportVisual method defined.');\n                }\n                proto.exportSVG = this.exportSVG;\n                proto.exportImage = this.exportImage;\n                proto.exportPDF = this.exportPDF;\n                if (!skipLegacy) {\n                    proto.svg = this.svg;\n                    proto.imageDataURL = this.imageDataURL;\n                }\n            },\n            exportSVG: function (options) {\n                return draw.exportSVG(this.exportVisual(), options);\n            },\n            exportImage: function (options) {\n                return draw.exportImage(this.exportVisual(options), options);\n            },\n            exportPDF: function (options) {\n                return draw.exportPDF(this.exportVisual(), options);\n            },\n            svg: function () {\n                if (draw.svg.Surface) {\n                    return draw.svg.exportGroup(this.exportVisual());\n                } else {\n                    throw new Error('SVG Export failed. Unable to export instantiate kendo.drawing.svg.Surface');\n                }\n            },\n            imageDataURL: function () {\n                if (!kendo.support.canvas) {\n                    return null;\n                }\n                if (draw.canvas.Surface) {\n                    var container = $('<div />').css({\n                        display: 'none',\n                        width: this.element.width(),\n                        height: this.element.height()\n                    }).appendTo(document.body);\n                    var surface = new draw.canvas.Surface(container[0]);\n                    surface.draw(this.exportVisual());\n                    var image = surface._rootElement.toDataURL();\n                    surface.destroy();\n                    container.remove();\n                    return image;\n                } else {\n                    throw new Error('Image Export failed. Unable to export instantiate kendo.drawing.canvas.Surface');\n                }\n            }\n        };\n        services.IntlService.register({\n            format: function (format) {\n                return kendo.format.apply(null, [format].concat(Array.prototype.slice.call(arguments, 1)));\n            },\n            toString: kendo.toString,\n            parseDate: kendo.parseDate\n        });\n        services.TemplateService.register({ compile: kendo.template });\n        dataviz.Point2D = dataviz.Point;\n        dataviz.Box2D = dataviz.Box;\n        dataviz.mwDelta = function (e) {\n            return dataviz.mousewheelDelta(e.originalEvent);\n        };\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.core', [\n        'dataviz/core/kendo-core',\n        'dataviz/core/core'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.core',\n        name: 'Core',\n        description: 'The DataViz core functions',\n        category: 'dataviz',\n        depends: [\n            'core',\n            'drawing'\n        ],\n        hidden: true\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}