<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hmk.pro.mapper.power.MSysFuncsecurityMapper" >
  <resultMap id="BaseResultMap" type="com.hmk.pro.po.power.MSysFuncsecurity" >
    <id column="FID" property="fid" jdbcType="INTEGER" />
    <result column="MIS_USERID" property="misUserid" jdbcType="INTEGER" />
    <result column="FUNCTION_ID" property="functionId" jdbcType="VARCHAR" />
    <result column="`LOCK`" property="`LOCK`" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FID,MIS_USERID,FUNCTION_ID,``LOCK``
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hmk.pro.po.power.MSysFuncsecurityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    *
    from m_sys_funcsecurity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_sys_funcsecurity
    where FID = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_sys_funcsecurity
    where FID = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hmk.pro.po.power.MSysFuncsecurityExample" >
    delete from m_sys_funcsecurity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hmk.pro.po.power.MSysFuncsecurity" >
    insert into m_sys_funcsecurity (FID, MIS_USERID, FUNCTION_ID, 
      `LOCK`)
    values (#{fid,jdbcType=INTEGER}, #{misUserid,jdbcType=INTEGER}, #{functionId,jdbcType=VARCHAR}, 
      #{lock,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hmk.pro.po.power.MSysFuncsecurity" >
    insert into m_sys_funcsecurity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
      	FID,
      </if>
      <if test="misUserid != null" >
      MIS_USERID,
      </if>
      <if test="functionId != null" >
      FUNCTION_ID,
      </if>
      <if test="`LOCK` != null" >
      `LOCK`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="misUserid != null" >
        #{misUserid,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="`LOCK` != null" >
        #{lock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hmk.pro.po.power.MSysFuncsecurityExample" resultType="java.lang.Integer" >
    select count(*) from m_sys_funcsecurity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_sys_funcsecurity
    <set >
      <if test="record.fid != null" >
        FID = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.misUserid != null" >
        MIS_USERID = #{record.misUserid,jdbcType=INTEGER},
      </if>
      <if test="record.functionId != null" >
        FUNCTION_ID = #{record.functionId,jdbcType=VARCHAR},
      </if>
      <if test="record.`LOCK` != null" >
        `LOCK` = #{record.lock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_sys_funcsecurity
    set FID = #{record.fid,jdbcType=INTEGER},
      MIS_USERID = #{record.misUserid,jdbcType=INTEGER},
      FUNCTION_ID = #{record.functionId,jdbcType=VARCHAR},
      `LOCK` = #{record.lock,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hmk.pro.po.power.MSysFuncsecurity" >
    update m_sys_funcsecurity
    <set >
      <if test="misUserid != null" >
        MIS_USERID = #{misUserid,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        FUNCTION_ID = #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="`LOCK` != null" >
        `LOCK` = #{lock,jdbcType=INTEGER},
      </if>
    </set>
    where FID = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hmk.pro.po.power.MSysFuncsecurity" >
    update m_sys_funcsecurity
    set MIS_USERID = #{misUserid,jdbcType=INTEGER},
      FUNCTION_ID = #{functionId,jdbcType=VARCHAR},
      `LOCK` = #{lock,jdbcType=INTEGER}
    where FID = #{fid,jdbcType=INTEGER}
  </update>
</mapper>