<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hmk.pro.mapper.base.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.hmk.pro.po.base.Employee">
		<id column="emplyeeId" property="emplyeeid" jdbcType="VARCHAR" />
		<result column="usename" property="usename" jdbcType="VARCHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="titleId" property="titleid" jdbcType="VARCHAR" />
		<result column="deptId" property="deptid" jdbcType="VARCHAR" />
		<result column="deptName" property="deptname" jdbcType="VARCHAR" />
		<result column="groupId" property="groupid" jdbcType="VARCHAR" />
		<result column="Isdelete" property="isdelete" jdbcType="INTEGER" />
		<result column="EX1" property="ex1" jdbcType="VARCHAR" />
		<result column="EX2" property="ex2" jdbcType="VARCHAR" />
		<result column="EX3" property="ex3" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		emplyeeId, usename, realname, phone, titleId, deptId, deptName, groupId,
		Isdelete,
		EX1, EX2, EX3
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hmk.pro.po.base.EmployeeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPageAndExample" resultMap="BaseResultMap"
		parameterType="com.hmk.pro.po.base.EmployeeExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit ${startPos},${pageSize}
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from employee
		where emplyeeId = #{emplyeeid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from employee
		where emplyeeId = #{emplyeeid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.hmk.pro.po.base.EmployeeExample">
		delete from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hmk.pro.po.base.Employee">
		insert into employee (emplyeeId, usename, realname,
		phone, titleId, deptId,
		deptName, groupId, Isdelete,
		EX1, EX2, EX3)
		values (#{emplyeeid,jdbcType=VARCHAR}, #{usename,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{titleid,jdbcType=VARCHAR}, #{deptid,jdbcType=VARCHAR},
		#{deptname,jdbcType=VARCHAR}, #{groupid,jdbcType=VARCHAR},
		#{isdelete,jdbcType=INTEGER},
		#{ex1,jdbcType=VARCHAR}, #{ex2,jdbcType=VARCHAR}, #{ex3,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.hmk.pro.po.base.Employee">
		insert into employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="emplyeeid != null">
				emplyeeId,
			</if>
			<if test="usename != null">
				usename,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="titleid != null">
				titleId,
			</if>
			<if test="deptid != null">
				deptId,
			</if>
			<if test="deptname != null">
				deptName,
			</if>
			<if test="groupid != null">
				groupId,
			</if>
			<if test="isdelete != null">
				Isdelete,
			</if>
			<if test="ex1 != null">
				EX1,
			</if>
			<if test="ex2 != null">
				EX2,
			</if>
			<if test="ex3 != null">
				EX3,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="emplyeeid != null">
				#{emplyeeid,jdbcType=VARCHAR},
			</if>
			<if test="usename != null">
				#{usename,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="titleid != null">
				#{titleid,jdbcType=VARCHAR},
			</if>
			<if test="deptid != null">
				#{deptid,jdbcType=VARCHAR},
			</if>
			<if test="deptname != null">
				#{deptname,jdbcType=VARCHAR},
			</if>
			<if test="groupid != null">
				#{groupid,jdbcType=VARCHAR},
			</if>
			<if test="isdelete != null">
				#{isdelete,jdbcType=INTEGER},
			</if>
			<if test="ex1 != null">
				#{ex1,jdbcType=VARCHAR},
			</if>
			<if test="ex2 != null">
				#{ex2,jdbcType=VARCHAR},
			</if>
			<if test="ex3 != null">
				#{ex3,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hmk.pro.po.base.EmployeeExample"
		resultType="java.lang.Integer">
		select count(*) from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update employee
		<set>
			<if test="record.emplyeeid != null">
				emplyeeId = #{record.emplyeeid,jdbcType=VARCHAR},
			</if>
			<if test="record.usename != null">
				usename = #{record.usename,jdbcType=VARCHAR},
			</if>
			<if test="record.realname != null">
				realname = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.titleid != null">
				titleId = #{record.titleid,jdbcType=VARCHAR},
			</if>
			<if test="record.deptid != null">
				deptId = #{record.deptid,jdbcType=VARCHAR},
			</if>
			<if test="record.deptname != null">
				deptName = #{record.deptname,jdbcType=VARCHAR},
			</if>
			<if test="record.groupid != null">
				groupId = #{record.groupid,jdbcType=VARCHAR},
			</if>
			<if test="record.isdelete != null">
				Isdelete = #{record.isdelete,jdbcType=INTEGER},
			</if>
			<if test="record.ex1 != null">
				EX1 = #{record.ex1,jdbcType=VARCHAR},
			</if>
			<if test="record.ex2 != null">
				EX2 = #{record.ex2,jdbcType=VARCHAR},
			</if>
			<if test="record.ex3 != null">
				EX3 = #{record.ex3,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update employee
		set emplyeeId = #{record.emplyeeid,jdbcType=VARCHAR},
		usename = #{record.usename,jdbcType=VARCHAR},
		realname = #{record.realname,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		titleId = #{record.titleid,jdbcType=VARCHAR},
		deptId = #{record.deptid,jdbcType=VARCHAR},
		deptName = #{record.deptname,jdbcType=VARCHAR},
		groupId = #{record.groupid,jdbcType=VARCHAR},
		Isdelete = #{record.isdelete,jdbcType=INTEGER},
		EX1 = #{record.ex1,jdbcType=VARCHAR},
		EX2 = #{record.ex2,jdbcType=VARCHAR},
		EX3 = #{record.ex3,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hmk.pro.po.base.Employee">
		update employee
		<set>
			<if test="usename != null">
				usename = #{usename,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="titleid != null">
				titleId = #{titleid,jdbcType=VARCHAR},
			</if>
			<if test="deptid != null">
				deptId = #{deptid,jdbcType=VARCHAR},
			</if>
			<if test="deptname != null">
				deptName = #{deptname,jdbcType=VARCHAR},
			</if>
			<if test="groupid != null">
				groupId = #{groupid,jdbcType=VARCHAR},
			</if>
			<if test="isdelete != null">
				Isdelete = #{isdelete,jdbcType=INTEGER},
			</if>
			<if test="ex1 != null">
				EX1 = #{ex1,jdbcType=VARCHAR},
			</if>
			<if test="ex2 != null">
				EX2 = #{ex2,jdbcType=VARCHAR},
			</if>
			<if test="ex3 != null">
				EX3 = #{ex3,jdbcType=VARCHAR},
			</if>
		</set>
		where emplyeeId = #{emplyeeid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hmk.pro.po.base.Employee">
		update employee
		set usename = #{usename,jdbcType=VARCHAR},
		realname = #{realname,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		titleId = #{titleid,jdbcType=VARCHAR},
		deptId = #{deptid,jdbcType=VARCHAR},
		deptName = #{deptname,jdbcType=VARCHAR},
		groupId = #{groupid,jdbcType=VARCHAR},
		Isdelete = #{isdelete,jdbcType=INTEGER},
		EX1 = #{ex1,jdbcType=VARCHAR},
		EX2 = #{ex2,jdbcType=VARCHAR},
		EX3 = #{ex3,jdbcType=VARCHAR}
		where emplyeeId = #{emplyeeid,jdbcType=VARCHAR}
	</update>
</mapper>